<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classacme_1_1segment" kind="class" language="C++" prot="public">
    <compoundname>acme::segment</compoundname>
    <includes refid="acme__segment_8hh" local="no">acme_segment.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classacme_1_1segment_1aa7c5882d8ec1aab38a1577642152f4ba" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classacme_1_1segment" kindref="compound">segment</ref> const  &gt;</type>
        <definition>typedef std::shared_ptr&lt;segment const&gt; ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
<para>Shared pointer to segment object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="54" column="29" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1segment_1afd291f997846b76a4a81969306c873de" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classacme_1_1segment_1aa7c5882d8ec1aab38a1577642152f4ba" kindref="member">ptr</ref>, <ref refid="classacme_1_1segment_1aa7c5882d8ec1aab38a1577642152f4ba" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::pair&lt;ptr, ptr&gt; pairptr</definition>
        <argsstring></argsstring>
        <name>pairptr</name>
        <briefdescription>
<para>Pair of pointers to segment objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="59" column="23" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1segment_1a02f887d7463962af80aaef2eb362fab7" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1segment_1aa7c5882d8ec1aab38a1577642152f4ba" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;ptr&gt; vecptr</definition>
        <argsstring></argsstring>
        <name>vecptr</name>
        <briefdescription>
<para>Vector of pointers to segment objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="60" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1segment_1a27ff81c8e484849677def987e6c8d6ed" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1segment_1afd291f997846b76a4a81969306c873de" kindref="member">pairptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;pairptr&gt; vecpairptr</definition>
        <argsstring></argsstring>
        <name>vecpairptr</name>
        <briefdescription>
<para>Vector of pairs of pointers to segment objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="61" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classacme_1_1segment_1a45f15171aca2a4628c5c847755a1ea9a" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 _point[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_point</name>
        <briefdescription>
<para>Segment extrema points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="64" column="10" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classacme_1_1segment_1ab4ae274b67d443268fb728e1c4a5a6ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~segment</definition>
        <argsstring>()</argsstring>
        <name>~segment</name>
        <briefdescription>
<para>Segment class destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="68" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a730c1960d32a1c32ff5a3daf951abba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>segment</definition>
        <argsstring>(segment const &amp;)=default</argsstring>
        <name>segment</name>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Segment copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="71" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a20eca870facaf6a8e4c18287ba2cc738" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>segment</definition>
        <argsstring>()</argsstring>
        <name>segment</name>
        <briefdescription>
<para>Segment class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="74" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a29c6290c11503df17f52b573449a6cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>segment</definition>
        <argsstring>(real_type x0, real_type y0, real_type z0, real_type x1, real_type y1, real_type z1)</argsstring>
        <name>segment</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>y0</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>z0</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>z1</declname>
        </param>
        <briefdescription>
<para>Segment class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="77" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1ac9c3f3461d1a80398905ab3bce7cb2dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>segment</definition>
        <argsstring>(vec3 const &amp;point0, vec3 const &amp;point1)</argsstring>
        <name>segment</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point0</declname>
          <briefdescription><para>Input first segment point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point1</declname>
          <briefdescription><para>Input second segment point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Segment class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="87" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1ab39eac5b853adcde612a7789bb60d44e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>segment</definition>
        <argsstring>(vec3 const point[2])</argsstring>
        <name>segment</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
          <declname>point</declname>
          <array>[2]</array>
          <briefdescription><para>Input segment points </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Segment class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="93" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a3f4d106ff251706b8fbc3e36f978e85d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
        <definition>segment &amp; operator=</definition>
        <argsstring>(segment const &amp;input)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input segment object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="99" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="73" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a7bafb44a5c2c5869baec1e221b494d77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isApprox</definition>
        <argsstring>(segment const &amp;input) const</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if segments are (almost) equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="105" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="91" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isDegenerated</definition>
        <argsstring>(void) const</argsstring>
        <name>isDegenerated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if segment is degenerated to point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="111" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a9ac13ac832dddf28de095cfc0b638d63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 pointMiddle</definition>
        <argsstring>(void) const</argsstring>
        <name>pointMiddle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get segment midpoint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="115" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a530f1c4ad14eb2f03eb165d286771b76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const  &amp;</type>
        <definition>vec3 const  &amp; point</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>point</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Intput segment i-th point index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get segment i-th point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="119" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a83c16c7b48c15366ba084512015fbc29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
        <definition>vec3 &amp; point</definition>
        <argsstring>(size_t i)</argsstring>
        <name>point</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Intput segment i-th point index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set segment i-th point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="125" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a18ea1f21a485fe5a9af45ee4c7e107be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 toVector</definition>
        <argsstring>(void) const</argsstring>
        <name>toVector</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Convert segment to vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="131" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a38555349f33535ea447220752cb7c3a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 toNormalizedVector</definition>
        <argsstring>(void) const</argsstring>
        <name>toNormalizedVector</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Convert segment to normalized vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="135" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void translate</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>translate</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input translation vector </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Translate segment by vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="139" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="155" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform</definition>
        <argsstring>(affine const &amp;matrix)</argsstring>
        <name>transform</name>
        <param>
          <type><ref refid="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" kindref="member">affine</ref> const &amp;</type>
          <declname>matrix</declname>
          <briefdescription><para>4x4 affine transformation matrix </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Transform segment with affine transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="145" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="165" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a685f72aa18e0581ba0306eb0fd68eaf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(void)</argsstring>
        <name>swap</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Swap segment points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="151" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="175" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1ade2785dfb29e84a1a9ac2aae65589603" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clamp</definition>
        <argsstring>(box &amp;input) const</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="classacme_1_1box" kindref="compound">box</ref> &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input box object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get minimum box containing the current segment object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="155" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="185" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1a6b0c38fdd31781f819d3939c16824a11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type length</definition>
        <argsstring>(void) const</argsstring>
        <name>length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Calculate segment length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="161" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1segment_1ac5b5b39a91e580b9166d47c9462532fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isInside</definition>
        <argsstring>(vec3 const &amp;point) const</argsstring>
        <name>isInside</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Query point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="165" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_segment.cc" bodystart="208" bodyend="216"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Segment class container. </para>
    </briefdescription>
    <detaileddescription>
<para>Segment in 3D space. The segment is defined by two arbitrary points. </para>
    </detaileddescription>
    <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="50" column="3" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="51" bodyend="169"/>
    <listofallmembers>
      <member refid="classacme_1_1segment_1a45f15171aca2a4628c5c847755a1ea9a" prot="private" virt="non-virtual"><scope>acme::segment</scope><name>_point</name></member>
      <member refid="classacme_1_1segment_1ade2785dfb29e84a1a9ac2aae65589603" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>clamp</name></member>
      <member refid="classacme_1_1segment_1a7bafb44a5c2c5869baec1e221b494d77" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>isApprox</name></member>
      <member refid="classacme_1_1segment_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>isDegenerated</name></member>
      <member refid="classacme_1_1segment_1ac5b5b39a91e580b9166d47c9462532fe" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>isInside</name></member>
      <member refid="classacme_1_1segment_1a6b0c38fdd31781f819d3939c16824a11" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>length</name></member>
      <member refid="classacme_1_1segment_1a3f4d106ff251706b8fbc3e36f978e85d" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>operator=</name></member>
      <member refid="classacme_1_1segment_1afd291f997846b76a4a81969306c873de" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>pairptr</name></member>
      <member refid="classacme_1_1segment_1a530f1c4ad14eb2f03eb165d286771b76" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>point</name></member>
      <member refid="classacme_1_1segment_1a83c16c7b48c15366ba084512015fbc29" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>point</name></member>
      <member refid="classacme_1_1segment_1a9ac13ac832dddf28de095cfc0b638d63" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>pointMiddle</name></member>
      <member refid="classacme_1_1segment_1aa7c5882d8ec1aab38a1577642152f4ba" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>ptr</name></member>
      <member refid="classacme_1_1segment_1a730c1960d32a1c32ff5a3daf951abba5" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>segment</name></member>
      <member refid="classacme_1_1segment_1a20eca870facaf6a8e4c18287ba2cc738" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>segment</name></member>
      <member refid="classacme_1_1segment_1a29c6290c11503df17f52b573449a6cd4" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>segment</name></member>
      <member refid="classacme_1_1segment_1ac9c3f3461d1a80398905ab3bce7cb2dc" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>segment</name></member>
      <member refid="classacme_1_1segment_1ab39eac5b853adcde612a7789bb60d44e" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>segment</name></member>
      <member refid="classacme_1_1segment_1a685f72aa18e0581ba0306eb0fd68eaf3" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>swap</name></member>
      <member refid="classacme_1_1segment_1a38555349f33535ea447220752cb7c3a2" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>toNormalizedVector</name></member>
      <member refid="classacme_1_1segment_1a18ea1f21a485fe5a9af45ee4c7e107be" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>toVector</name></member>
      <member refid="classacme_1_1segment_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>transform</name></member>
      <member refid="classacme_1_1segment_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>translate</name></member>
      <member refid="classacme_1_1segment_1a27ff81c8e484849677def987e6c8d6ed" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>vecpairptr</name></member>
      <member refid="classacme_1_1segment_1a02f887d7463962af80aaef2eb362fab7" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>vecptr</name></member>
      <member refid="classacme_1_1segment_1ab4ae274b67d443268fb728e1c4a5a6ff" prot="public" virt="non-virtual"><scope>acme::segment</scope><name>~segment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
