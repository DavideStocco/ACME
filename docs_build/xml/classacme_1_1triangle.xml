<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classacme_1_1triangle" kind="class" language="C++" prot="public">
    <compoundname>acme::triangle</compoundname>
    <includes refid="acme__triangle_8hh" local="no">acme_triangle.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classacme_1_1triangle_1a4f4a466d55ff90e7777d6349a180621f" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const  &gt;</type>
        <definition>typedef std::shared_ptr&lt;triangle const&gt; ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
<para>Shared pointer to triangle object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="55" column="29" bodyfile="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1triangle_1afd291f997846b76a4a81969306c873de" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classacme_1_1triangle_1a4f4a466d55ff90e7777d6349a180621f" kindref="member">ptr</ref>, <ref refid="classacme_1_1triangle_1a4f4a466d55ff90e7777d6349a180621f" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::pair&lt;ptr, ptr&gt; pairptr</definition>
        <argsstring></argsstring>
        <name>pairptr</name>
        <briefdescription>
<para>Pair of pointers to triangle objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="60" column="23" bodyfile="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1triangle_1a02f887d7463962af80aaef2eb362fab7" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1triangle_1a4f4a466d55ff90e7777d6349a180621f" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;ptr&gt; vecptr</definition>
        <argsstring></argsstring>
        <name>vecptr</name>
        <briefdescription>
<para>Vector of pointers to triangle objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="61" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1triangle_1a27ff81c8e484849677def987e6c8d6ed" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1triangle_1afd291f997846b76a4a81969306c873de" kindref="member">pairptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;pairptr&gt; vecpairptr</definition>
        <argsstring></argsstring>
        <name>vecpairptr</name>
        <briefdescription>
<para>Vector of pairs of pointers to triangle objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="62" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classacme_1_1triangle_1a8b8024a821d85d329b0e32d8e5b4e70f" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 _vertex[3]</definition>
        <argsstring>[3]</argsstring>
        <name>_vertex</name>
        <briefdescription>
<para>Triangle vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="65" column="10" bodyfile="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classacme_1_1triangle_1a5dc4b9d4bff9aa5e28f36db4203bbe2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>triangle</definition>
        <argsstring>(triangle const &amp;)=default</argsstring>
        <name>triangle</name>
        <param>
          <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Triangle class destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Triangle copy constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="72" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1aee18579fe54e859a60b719481c024adb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>triangle</definition>
        <argsstring>()</argsstring>
        <name>triangle</name>
        <briefdescription>
<para>Triangle class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="75" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1ade9069a27a7db7560b74c3a59671e9de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>triangle</definition>
        <argsstring>(real_type x0, real_type y0, real_type z0, real_type x1, real_type y1, real_type z1, real_type x2, real_type y2, real_type z2)</argsstring>
        <name>triangle</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>y0</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>z0</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>z1</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>x2</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>y2</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>z2</declname>
        </param>
        <briefdescription>
<para>Triangle class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="78" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a3aff9df7f200d709fb230998189d3714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>triangle</definition>
        <argsstring>(vec3 const &amp;point0, vec3 const &amp;point1, vec3 const &amp;point2)</argsstring>
        <name>triangle</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point0</declname>
          <briefdescription><para>Input first triangle vertex point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point1</declname>
          <briefdescription><para>Input second triangle vertex point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point2</declname>
          <briefdescription><para>Input third triangle vertex point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Triangle class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="91" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a6a6f5b3ebc6af21f04ebe0ff6077e330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>triangle</definition>
        <argsstring>(vec3 const point[3])</argsstring>
        <name>triangle</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
          <declname>point</declname>
          <array>[3]</array>
          <briefdescription><para>Input triangle verices </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Triangle class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="98" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a08189ad67d58a9063073167af160d9fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> &amp;</type>
        <definition>triangle &amp; operator=</definition>
        <argsstring>(triangle const &amp;input)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input triangle object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="104" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="78" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a5cd8f9f646b0e275b51038ba42dad008" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isApprox</definition>
        <argsstring>(triangle const &amp;input) const</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input triangle object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if objects are (almost) equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="110" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="97" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isDegenerated</definition>
        <argsstring>(void) const</argsstring>
        <name>isDegenerated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if triangle is degenerated to point or segment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="116" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="109" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a56340b2a4adaf63437396a14662263d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const  &amp;</type>
        <definition>vec3 const  &amp; vertex</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>vertex</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>New triangle vertex </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get i-th triangle vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="120" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a8db7308609062db41822bc9110bc3bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
        <definition>vec3 &amp; vertex</definition>
        <argsstring>(size_t i)</argsstring>
        <name>vertex</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>New triangle vertex </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get i-th triangle vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="126" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a7b2c1fb719d30be4c974224d53f53c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vertices</definition>
        <argsstring>(vec3 const &amp;vertex0, vec3 const &amp;vertex1, vec3 const &amp;vertex2)</argsstring>
        <name>vertices</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>vertex0</declname>
          <briefdescription><para>Input first triangle vertex </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>vertex1</declname>
          <briefdescription><para>Input second triangle vertex </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>vertex2</declname>
          <briefdescription><para>Input third triangle vertex </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set triangle vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="132" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="139" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a8e91fd4e7860e5433e6404660b624ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vertices</definition>
        <argsstring>(vec3 const vertex[3])</argsstring>
        <name>vertices</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
          <declname>vertex</declname>
          <array>[3]</array>
          <briefdescription><para>New triangle vertices </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set triangle vertices vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="140" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="152" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a833e0986343025afb9b4fe6609030dfd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref></type>
        <definition>segment edge</definition>
        <argsstring>(size_t i, size_t j) const</argsstring>
        <name>edge</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Triangle i-th vertex index </para>
</briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
          <briefdescription><para>Triangle j-th vertex index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get triangle edge created by i-th and j-th vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="146" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="163" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a51e8b7b6dc840d6446ffa0710c7ad77c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 normal</definition>
        <argsstring>(void) const</argsstring>
        <name>normal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get triangle face normal (normalized vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="153" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void translate</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>translate</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input translation vector </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Translate triangle by vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="157" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="183" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform</definition>
        <argsstring>(affine const &amp;matrix)</argsstring>
        <name>transform</name>
        <param>
          <type><ref refid="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" kindref="member">affine</ref> const &amp;</type>
          <declname>matrix</declname>
          <briefdescription><para>4x4 affine transformation matrix </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Transform triangle with affine transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="163" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a0f6813915669f4e9c589b5f8c6740e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(size_t i, size_t j)</argsstring>
        <name>swap</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Triangle i-th vertex index </para>
</briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
          <briefdescription><para>Triangle j-th vertex index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Swap triangle vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="169" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="205" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1ade2785dfb29e84a1a9ac2aae65589603" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clamp</definition>
        <argsstring>(box &amp;input) const</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="classacme_1_1box" kindref="compound">box</ref> &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input box object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get minimum box containing the current triangle object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="176" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="218" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a7ddd2edd48a5267b7b6c507507eed4e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type perimeter</definition>
        <argsstring>(void) const</argsstring>
        <name>perimeter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Calculate triangle perimeter length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="182" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="233" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a5a86f90f72822458355c84a09d446156" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type area</definition>
        <argsstring>(void) const</argsstring>
        <name>area</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Calculate triangle area. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="187" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="244" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1ac5b5b39a91e580b9166d47c9462532fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isInside</definition>
        <argsstring>(vec3 const &amp;point) const</argsstring>
        <name>isInside</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Query point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if a point lays inside the triangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="192" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="253" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1triangle_1a992ef49825ccec86df7b9b407dbbfcb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void barycentric</definition>
        <argsstring>(vec3 const &amp;point, real_type &amp;u, real_type &amp;v, real_type &amp;w) const</argsstring>
        <name>barycentric</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Input point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> &amp;</type>
          <declname>u</declname>
          <briefdescription><para>Output barycentric coordinate u </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> &amp;</type>
          <declname>v</declname>
          <briefdescription><para>Output barycentric coordinate v </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> &amp;</type>
          <declname>w</declname>
          <briefdescription><para>Output barycentric coordinate w </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Compute barycentric coordinates (u,v,w) for point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="198" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_triangle.cc" bodystart="270" bodyend="289"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Triangle class container. </para>
    </briefdescription>
    <detaileddescription>
<para>Triangle in 3D space. The triangle is defined by three arbitrary points. </para>
    </detaileddescription>
    <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="51" column="3" bodyfile="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" bodystart="52" bodyend="205"/>
    <listofallmembers>
      <member refid="classacme_1_1triangle_1a8b8024a821d85d329b0e32d8e5b4e70f" prot="private" virt="non-virtual"><scope>acme::triangle</scope><name>_vertex</name></member>
      <member refid="classacme_1_1triangle_1a5a86f90f72822458355c84a09d446156" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>area</name></member>
      <member refid="classacme_1_1triangle_1a992ef49825ccec86df7b9b407dbbfcb8" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>barycentric</name></member>
      <member refid="classacme_1_1triangle_1ade2785dfb29e84a1a9ac2aae65589603" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>clamp</name></member>
      <member refid="classacme_1_1triangle_1a833e0986343025afb9b4fe6609030dfd" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>edge</name></member>
      <member refid="classacme_1_1triangle_1a5cd8f9f646b0e275b51038ba42dad008" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>isApprox</name></member>
      <member refid="classacme_1_1triangle_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>isDegenerated</name></member>
      <member refid="classacme_1_1triangle_1ac5b5b39a91e580b9166d47c9462532fe" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>isInside</name></member>
      <member refid="classacme_1_1triangle_1a51e8b7b6dc840d6446ffa0710c7ad77c" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>normal</name></member>
      <member refid="classacme_1_1triangle_1a08189ad67d58a9063073167af160d9fd" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>operator=</name></member>
      <member refid="classacme_1_1triangle_1afd291f997846b76a4a81969306c873de" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>pairptr</name></member>
      <member refid="classacme_1_1triangle_1a7ddd2edd48a5267b7b6c507507eed4e5" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>perimeter</name></member>
      <member refid="classacme_1_1triangle_1a4f4a466d55ff90e7777d6349a180621f" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>ptr</name></member>
      <member refid="classacme_1_1triangle_1a0f6813915669f4e9c589b5f8c6740e35" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>swap</name></member>
      <member refid="classacme_1_1triangle_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>transform</name></member>
      <member refid="classacme_1_1triangle_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>translate</name></member>
      <member refid="classacme_1_1triangle_1a5dc4b9d4bff9aa5e28f36db4203bbe2c" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>triangle</name></member>
      <member refid="classacme_1_1triangle_1aee18579fe54e859a60b719481c024adb" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>triangle</name></member>
      <member refid="classacme_1_1triangle_1ade9069a27a7db7560b74c3a59671e9de" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>triangle</name></member>
      <member refid="classacme_1_1triangle_1a3aff9df7f200d709fb230998189d3714" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>triangle</name></member>
      <member refid="classacme_1_1triangle_1a6a6f5b3ebc6af21f04ebe0ff6077e330" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>triangle</name></member>
      <member refid="classacme_1_1triangle_1a27ff81c8e484849677def987e6c8d6ed" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>vecpairptr</name></member>
      <member refid="classacme_1_1triangle_1a02f887d7463962af80aaef2eb362fab7" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>vecptr</name></member>
      <member refid="classacme_1_1triangle_1a56340b2a4adaf63437396a14662263d0" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>vertex</name></member>
      <member refid="classacme_1_1triangle_1a8db7308609062db41822bc9110bc3bb7" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>vertex</name></member>
      <member refid="classacme_1_1triangle_1a7b2c1fb719d30be4c974224d53f53c47" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>vertices</name></member>
      <member refid="classacme_1_1triangle_1a8e91fd4e7860e5433e6404660b624ed9" prot="public" virt="non-virtual"><scope>acme::triangle</scope><name>vertices</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
