<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classacme_1_1circle" kind="class" language="C++" prot="public">
    <compoundname>acme::circle</compoundname>
    <includes refid="acme__circle_8hh" local="no">acme_circle.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classacme_1_1circle_1a284a038c7d4c5bb28d3c5c1a3075e972" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classacme_1_1circle" kindref="compound">circle</ref> const  &gt;</type>
        <definition>typedef std::shared_ptr&lt;circle const&gt; ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
<para>Shared pointer to circle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="54" column="29" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1circle_1afd291f997846b76a4a81969306c873de" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classacme_1_1circle_1a284a038c7d4c5bb28d3c5c1a3075e972" kindref="member">ptr</ref>, <ref refid="classacme_1_1circle_1a284a038c7d4c5bb28d3c5c1a3075e972" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::pair&lt;ptr, ptr&gt; pairptr</definition>
        <argsstring></argsstring>
        <name>pairptr</name>
        <briefdescription>
<para>Pair of pointers to circle objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="59" column="23" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1circle_1a02f887d7463962af80aaef2eb362fab7" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1circle_1a284a038c7d4c5bb28d3c5c1a3075e972" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;ptr&gt; vecptr</definition>
        <argsstring></argsstring>
        <name>vecptr</name>
        <briefdescription>
<para>Vector of pointers to circle objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="60" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1circle_1a27ff81c8e484849677def987e6c8d6ed" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1circle_1afd291f997846b76a4a81969306c873de" kindref="member">pairptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;pairptr&gt; vecpairptr</definition>
        <argsstring></argsstring>
        <name>vecpairptr</name>
        <briefdescription>
<para>Vector of pairs of pointers to circle objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="61" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classacme_1_1circle_1ae7f457ae43bd00cd24539ba47b838311" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type _radius</definition>
        <argsstring></argsstring>
        <name>_radius</name>
        <briefdescription>
<para>Circle radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="64" column="15" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classacme_1_1circle_1ac043334c95c783ba768210d765f790e0" prot="private" static="no" mutable="no">
        <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref></type>
        <definition>plane _plane</definition>
        <argsstring></argsstring>
        <name>_plane</name>
        <briefdescription>
<para>Circle plane (circle center + normal vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="65" column="11" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classacme_1_1circle_1a69dc7b0f8404fef1e26e3deaafcf3613" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~circle</definition>
        <argsstring>()</argsstring>
        <name>~circle</name>
        <briefdescription>
<para>Class deconstructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="69" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1afb2974b9dba3d8709c4adb2ceac55bf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>circle</definition>
        <argsstring>()</argsstring>
        <name>circle</name>
        <briefdescription>
<para>Class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="72" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1ad79d211dff7b6285a241c53db71d3237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>circle</definition>
        <argsstring>(circle const &amp;)=default</argsstring>
        <name>circle</name>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="75" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a25cfd706ad2d13bf49f31c36c6ef1132" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>circle</definition>
        <argsstring>(real_type radius, plane const &amp;plane)</argsstring>
        <name>circle</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>radius</declname>
          <briefdescription><para>Input circle radius </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane</declname>
          <briefdescription><para>Input circle laying plane </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="78" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1aef3d5b08b8eb2d05bf0694c1b0505705" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>circle</definition>
        <argsstring>(real_type radius, vec3 const &amp;center, vec3 const &amp;normal)</argsstring>
        <name>circle</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>radius</declname>
          <briefdescription><para>Input circle radius </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>center</declname>
          <briefdescription><para>Input circle center </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>normal</declname>
          <briefdescription><para>Input circle normal to the laying plane </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="87" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a17e97b1291525063d4b10a77d4d434d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> &amp;</type>
        <definition>circle &amp; operator=</definition>
        <argsstring>(circle const &amp;input)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input circle object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="98" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="44" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1accae64e05d8d12c2f74cbb5e60d9647f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isApprox</definition>
        <argsstring>(circle const &amp;input) const</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input circle object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if circles are (almost) equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="104" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="62" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isDegenerated</definition>
        <argsstring>(void) const</argsstring>
        <name>isDegenerated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if circle is degenerated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="110" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a0a74645290aff57c5fb01997c3042304" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type radius</definition>
        <argsstring>(void) const</argsstring>
        <name>radius</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get circle radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="114" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1abc05c7b88658636d73aa28577de3bc96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const  &amp;</type>
        <definition>vec3 const  &amp; center</definition>
        <argsstring>(void) const</argsstring>
        <name>center</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get circle center point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="118" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a10866c92d1b375a6696dfbb20e1f1973" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const  &amp;</type>
        <definition>vec3 const  &amp; normal</definition>
        <argsstring>(void) const</argsstring>
        <name>normal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get circle laying plane normal vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="122" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a5f37ce15625acceff290c5900877b908" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const  &amp;</type>
        <definition>plane const  &amp; layingPlane</definition>
        <argsstring>(void) const</argsstring>
        <name>layingPlane</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get cicle laying plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="126" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a3fb764d2d65123abb1159a83928182e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radius</definition>
        <argsstring>(real_type input)</argsstring>
        <name>radius</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>New circle radius </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set circle radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="130" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a56f2c241fce145d34db294d537e08d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void center</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>center</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>New circle center point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set circle center point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="136" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a2f72d170687ff0fa8d6fe65cab97bebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void normal</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>normal</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>New circle laying plane normal vector </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set circle laying plane normal vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="142" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a7494eb6e7ee0d104f3a01dcceed8607a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void normalize</definition>
        <argsstring>(void)</argsstring>
        <name>normalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalize circle normal vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="148" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1aa20461d07a8e0c1c2b2c7e74da758d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void layingPlane</definition>
        <argsstring>(plane const &amp;input)</argsstring>
        <name>layingPlane</name>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input plane object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set circle laying plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="152" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="153" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void translate</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>translate</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input translation vector </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Translate by vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="158" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform</definition>
        <argsstring>(affine const &amp;matrix)</argsstring>
        <name>transform</name>
        <param>
          <type><ref refid="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" kindref="member">affine</ref> const &amp;</type>
          <declname>matrix</declname>
          <briefdescription><para>4x4 affine transformation matrix </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Transform circle with affine transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="164" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1a84dbd5c935dbc893d6c2bf646a8edcf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reverse</definition>
        <argsstring>(void)</argsstring>
        <name>reverse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reverse direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="170" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1circle_1ac5b5b39a91e580b9166d47c9462532fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isInside</definition>
        <argsstring>(vec3 const &amp;point) const</argsstring>
        <name>isInside</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Query point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="174" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_circle.cc" bodystart="188" bodyend="194"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Circle class container. </para>
    </briefdescription>
    <detaileddescription>
<para>Circle in 3D space and defined by a radius and a plane (circle center + normal vector). </para>
    </detaileddescription>
    <location file="/Users/davide/Documents/Git/acme/include/acme_circle.hh" line="50" column="3" bodyfile="/Users/davide/Documents/Git/acme/include/acme_circle.hh" bodystart="51" bodyend="178"/>
    <listofallmembers>
      <member refid="classacme_1_1circle_1ac043334c95c783ba768210d765f790e0" prot="private" virt="non-virtual"><scope>acme::circle</scope><name>_plane</name></member>
      <member refid="classacme_1_1circle_1ae7f457ae43bd00cd24539ba47b838311" prot="private" virt="non-virtual"><scope>acme::circle</scope><name>_radius</name></member>
      <member refid="classacme_1_1circle_1abc05c7b88658636d73aa28577de3bc96" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>center</name></member>
      <member refid="classacme_1_1circle_1a56f2c241fce145d34db294d537e08d52" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>center</name></member>
      <member refid="classacme_1_1circle_1afb2974b9dba3d8709c4adb2ceac55bf2" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>circle</name></member>
      <member refid="classacme_1_1circle_1ad79d211dff7b6285a241c53db71d3237" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>circle</name></member>
      <member refid="classacme_1_1circle_1a25cfd706ad2d13bf49f31c36c6ef1132" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>circle</name></member>
      <member refid="classacme_1_1circle_1aef3d5b08b8eb2d05bf0694c1b0505705" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>circle</name></member>
      <member refid="classacme_1_1circle_1accae64e05d8d12c2f74cbb5e60d9647f" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>isApprox</name></member>
      <member refid="classacme_1_1circle_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>isDegenerated</name></member>
      <member refid="classacme_1_1circle_1ac5b5b39a91e580b9166d47c9462532fe" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>isInside</name></member>
      <member refid="classacme_1_1circle_1a5f37ce15625acceff290c5900877b908" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>layingPlane</name></member>
      <member refid="classacme_1_1circle_1aa20461d07a8e0c1c2b2c7e74da758d39" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>layingPlane</name></member>
      <member refid="classacme_1_1circle_1a10866c92d1b375a6696dfbb20e1f1973" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>normal</name></member>
      <member refid="classacme_1_1circle_1a2f72d170687ff0fa8d6fe65cab97bebe" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>normal</name></member>
      <member refid="classacme_1_1circle_1a7494eb6e7ee0d104f3a01dcceed8607a" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>normalize</name></member>
      <member refid="classacme_1_1circle_1a17e97b1291525063d4b10a77d4d434d4" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>operator=</name></member>
      <member refid="classacme_1_1circle_1afd291f997846b76a4a81969306c873de" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>pairptr</name></member>
      <member refid="classacme_1_1circle_1a284a038c7d4c5bb28d3c5c1a3075e972" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>ptr</name></member>
      <member refid="classacme_1_1circle_1a0a74645290aff57c5fb01997c3042304" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>radius</name></member>
      <member refid="classacme_1_1circle_1a3fb764d2d65123abb1159a83928182e9" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>radius</name></member>
      <member refid="classacme_1_1circle_1a84dbd5c935dbc893d6c2bf646a8edcf4" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>reverse</name></member>
      <member refid="classacme_1_1circle_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>transform</name></member>
      <member refid="classacme_1_1circle_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>translate</name></member>
      <member refid="classacme_1_1circle_1a27ff81c8e484849677def987e6c8d6ed" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>vecpairptr</name></member>
      <member refid="classacme_1_1circle_1a02f887d7463962af80aaef2eb362fab7" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>vecptr</name></member>
      <member refid="classacme_1_1circle_1a69dc7b0f8404fef1e26e3deaafcf3613" prot="public" virt="non-virtual"><scope>acme::circle</scope><name>~circle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
