<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classacme_1_1plane" kind="class" language="C++" prot="public">
    <compoundname>acme::plane</compoundname>
    <includes refid="acme__plane_8hh" local="no">acme_plane.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classacme_1_1plane_1af41c4fce45a7b097229699e692a8aede" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classacme_1_1plane" kindref="compound">plane</ref> const  &gt;</type>
        <definition>typedef std::shared_ptr&lt;plane const&gt; ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
<para>Shared pointer to plane object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="53" column="29" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1plane_1afd291f997846b76a4a81969306c873de" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classacme_1_1plane_1af41c4fce45a7b097229699e692a8aede" kindref="member">ptr</ref>, <ref refid="classacme_1_1plane_1af41c4fce45a7b097229699e692a8aede" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::pair&lt;ptr, ptr&gt; pairptr</definition>
        <argsstring></argsstring>
        <name>pairptr</name>
        <briefdescription>
<para>Pair of pointers to plane objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="58" column="23" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1plane_1a02f887d7463962af80aaef2eb362fab7" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1plane_1af41c4fce45a7b097229699e692a8aede" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;ptr&gt; vecptr</definition>
        <argsstring></argsstring>
        <name>vecptr</name>
        <briefdescription>
<para>Vector of pointers to plane objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="59" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1plane_1a27ff81c8e484849677def987e6c8d6ed" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1plane_1afd291f997846b76a4a81969306c873de" kindref="member">pairptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;pairptr&gt; vecpairptr</definition>
        <argsstring></argsstring>
        <name>vecpairptr</name>
        <briefdescription>
<para>Vector of pairs of pointers to plane objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="60" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classacme_1_1plane_1abd9ca9e8a8815499a64d0e78fe898ff7" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 _origin</definition>
        <argsstring></argsstring>
        <name>_origin</name>
        <briefdescription>
<para>Plane origin vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="63" column="10" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classacme_1_1plane_1accff6b8a3d1c7874707fba62e8cad5c5" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 _normal</definition>
        <argsstring></argsstring>
        <name>_normal</name>
        <briefdescription>
<para>Plane normal vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="64" column="10" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classacme_1_1plane_1a50a5cdb91fa15db4495f613dc33cd201" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~plane</definition>
        <argsstring>()</argsstring>
        <name>~plane</name>
        <briefdescription>
<para>Plane class destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="68" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a0499a7127e34a654120e447b24c03770" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>plane</definition>
        <argsstring>()</argsstring>
        <name>plane</name>
        <briefdescription>
<para>Plane class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="71" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1afc2f916f98086feff3c12a016cdd4796" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>plane</definition>
        <argsstring>(plane const &amp;)=default</argsstring>
        <name>plane</name>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Plane copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="74" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1aa06498a3c7d2a752fd4378453590aae6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>plane</definition>
        <argsstring>(real_type ox, real_type oy, real_type oz, real_type dx, real_type dy, real_type dz)</argsstring>
        <name>plane</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>ox</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>oy</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>oz</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>dx</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>dy</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>dz</declname>
        </param>
        <briefdescription>
<para>Plane class constructor for plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="77" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="77" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a528f7c743fa1fa0742f37feab2b25ae0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>plane</definition>
        <argsstring>(vec3 const &amp;origin, vec3 const &amp;normal)</argsstring>
        <name>plane</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>origin</declname>
          <briefdescription><para>Input plane origin point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>normal</declname>
          <briefdescription><para>Input plane normal vector </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Plane class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="90" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1ab338b44d6842dab40b9b226a95944e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> &amp;</type>
        <definition>plane &amp; operator=</definition>
        <argsstring>(plane const &amp;input)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input plane object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="100" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="44" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1ac1507703314d832e86af404c5da05d37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isApprox</definition>
        <argsstring>(plane const &amp;input) const</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input plane object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if objects are (almost) equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="106" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isDegenerated</definition>
        <argsstring>(void) const</argsstring>
        <name>isDegenerated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if plane is degenerated (normal has zero norm) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="112" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1ac1d57684ab4d15e46143c19a3dfe6924" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const  &amp;</type>
        <definition>vec3 const  &amp; origin</definition>
        <argsstring>(void) const</argsstring>
        <name>origin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return plane origin point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="116" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a10866c92d1b375a6696dfbb20e1f1973" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const  &amp;</type>
        <definition>vec3 const  &amp; normal</definition>
        <argsstring>(void) const</argsstring>
        <name>normal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return plane normal vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="120" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a7494eb6e7ee0d104f3a01dcceed8607a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void normalize</definition>
        <argsstring>(void)</argsstring>
        <name>normalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalize plane normal vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="124" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a5423275d6c818fdc75b9ab150157d0b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void origin</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>origin</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>input plane origin point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set plane origin point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="128" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a2f72d170687ff0fa8d6fe65cab97bebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void normal</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>normal</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>input plane origin vector </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set plane normal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="134" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void translate</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>translate</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input translation vector </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Translate plane by vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="140" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a3db8cac178975e06a5c2d18015106db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotate</definition>
        <argsstring>(mat3 const &amp;input)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input 3x3 rotation matrix </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Rotate plane by matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="146" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform</definition>
        <argsstring>(affine const &amp;matrix)</argsstring>
        <name>transform</name>
        <param>
          <type><ref refid="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" kindref="member">affine</ref> const &amp;</type>
          <declname>matrix</declname>
          <briefdescription><para>4x4 affine transformation matrix </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Transform plane from with affine transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="152" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="133" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a84dbd5c935dbc893d6c2bf646a8edcf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reverse</definition>
        <argsstring>(void)</argsstring>
        <name>reverse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reverse plane normal vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="158" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a9eaad6de3b71f4e4af2822e1c6e448b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type d</definition>
        <argsstring>(void) const</argsstring>
        <name>d</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return plane equation d value (ax + by + cz + d = 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="162" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a3a3c21b706053ca7fb71decb7ca4e207" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type distance</definition>
        <argsstring>(vec3 const &amp;input) const</argsstring>
        <name>distance</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Distance between point and plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="166" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="160" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a36d0ece8c3eee7d241367e0a2076fcdc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type squaredDistance</definition>
        <argsstring>(vec3 const &amp;input) const</argsstring>
        <name>squaredDistance</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Squared distance between point and plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="172" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="170" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1a5e3080d5f95afb730ad9ac48e7ecf0e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type signedDistance</definition>
        <argsstring>(vec3 const &amp;input) const</argsstring>
        <name>signedDistance</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Signed distance between point and plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="178" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1plane_1ac5b5b39a91e580b9166d47c9462532fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isInside</definition>
        <argsstring>(vec3 const &amp;point) const</argsstring>
        <name>isInside</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="184" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_plane.cc" bodystart="190" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Plane class container. </para>
    </briefdescription>
    <detaileddescription>
<para>3D plane defined by the normal vector to plane and an arbitraty point laying on the plane. </para>
    </detaileddescription>
    <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="49" column="3" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="50" bodyend="188"/>
    <listofallmembers>
      <member refid="classacme_1_1plane_1accff6b8a3d1c7874707fba62e8cad5c5" prot="private" virt="non-virtual"><scope>acme::plane</scope><name>_normal</name></member>
      <member refid="classacme_1_1plane_1abd9ca9e8a8815499a64d0e78fe898ff7" prot="private" virt="non-virtual"><scope>acme::plane</scope><name>_origin</name></member>
      <member refid="classacme_1_1plane_1a9eaad6de3b71f4e4af2822e1c6e448b8" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>d</name></member>
      <member refid="classacme_1_1plane_1a3a3c21b706053ca7fb71decb7ca4e207" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>distance</name></member>
      <member refid="classacme_1_1plane_1ac1507703314d832e86af404c5da05d37" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>isApprox</name></member>
      <member refid="classacme_1_1plane_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>isDegenerated</name></member>
      <member refid="classacme_1_1plane_1ac5b5b39a91e580b9166d47c9462532fe" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>isInside</name></member>
      <member refid="classacme_1_1plane_1a10866c92d1b375a6696dfbb20e1f1973" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>normal</name></member>
      <member refid="classacme_1_1plane_1a2f72d170687ff0fa8d6fe65cab97bebe" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>normal</name></member>
      <member refid="classacme_1_1plane_1a7494eb6e7ee0d104f3a01dcceed8607a" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>normalize</name></member>
      <member refid="classacme_1_1plane_1ab338b44d6842dab40b9b226a95944e33" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>operator=</name></member>
      <member refid="classacme_1_1plane_1ac1d57684ab4d15e46143c19a3dfe6924" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>origin</name></member>
      <member refid="classacme_1_1plane_1a5423275d6c818fdc75b9ab150157d0b7" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>origin</name></member>
      <member refid="classacme_1_1plane_1afd291f997846b76a4a81969306c873de" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>pairptr</name></member>
      <member refid="classacme_1_1plane_1a0499a7127e34a654120e447b24c03770" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>plane</name></member>
      <member refid="classacme_1_1plane_1afc2f916f98086feff3c12a016cdd4796" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>plane</name></member>
      <member refid="classacme_1_1plane_1aa06498a3c7d2a752fd4378453590aae6" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>plane</name></member>
      <member refid="classacme_1_1plane_1a528f7c743fa1fa0742f37feab2b25ae0" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>plane</name></member>
      <member refid="classacme_1_1plane_1af41c4fce45a7b097229699e692a8aede" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>ptr</name></member>
      <member refid="classacme_1_1plane_1a84dbd5c935dbc893d6c2bf646a8edcf4" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>reverse</name></member>
      <member refid="classacme_1_1plane_1a3db8cac178975e06a5c2d18015106db6" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>rotate</name></member>
      <member refid="classacme_1_1plane_1a5e3080d5f95afb730ad9ac48e7ecf0e5" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>signedDistance</name></member>
      <member refid="classacme_1_1plane_1a36d0ece8c3eee7d241367e0a2076fcdc" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>squaredDistance</name></member>
      <member refid="classacme_1_1plane_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>transform</name></member>
      <member refid="classacme_1_1plane_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>translate</name></member>
      <member refid="classacme_1_1plane_1a27ff81c8e484849677def987e6c8d6ed" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>vecpairptr</name></member>
      <member refid="classacme_1_1plane_1a02f887d7463962af80aaef2eb362fab7" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>vecptr</name></member>
      <member refid="classacme_1_1plane_1a50a5cdb91fa15db4495f613dc33cd201" prot="public" virt="non-virtual"><scope>acme::plane</scope><name>~plane</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
