<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceacme" kind="namespace" language="C++">
    <compoundname>acme</compoundname>
    <innerclass refid="classacme_1_1_a_a_b_btree" prot="public">acme::AABBtree</innerclass>
    <innerclass refid="classacme_1_1box" prot="public">acme::box</innerclass>
    <innerclass refid="classacme_1_1circle" prot="public">acme::circle</innerclass>
    <innerclass refid="classacme_1_1line" prot="public">acme::line</innerclass>
    <innerclass refid="classacme_1_1plane" prot="public">acme::plane</innerclass>
    <innerclass refid="classacme_1_1ray" prot="public">acme::ray</innerclass>
    <innerclass refid="classacme_1_1segment" prot="public">acme::segment</innerclass>
    <innerclass refid="classacme_1_1triangle" prot="public">acme::triangle</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" prot="public" static="no">
        <type>double</type>
        <definition>typedef double real_type</definition>
        <argsstring></argsstring>
        <name>real_type</name>
        <briefdescription>
<para>Real number type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="78" column="18" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" prot="public" static="no">
        <type>int</type>
        <definition>typedef int int_type</definition>
        <argsstring></argsstring>
        <name>int_type</name>
        <briefdescription>
<para>Integer number type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="79" column="15" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1af9a793b801973447e8834bdca49350e9" prot="public" static="no">
        <type>std::ostream</type>
        <definition>typedef std::ostream ostream_type</definition>
        <argsstring></argsstring>
        <name>ostream_type</name>
        <briefdescription>
<para>Output stream type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="80" column="24" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a92b8475373957b4753e42687cab65be7" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;real_type, Eigen::Dynamic, 1&gt; vecN</definition>
        <argsstring></argsstring>
        <name>vecN</name>
        <briefdescription>
<para>Nx1 vector of real number type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="82" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1ad738f944bd5d7f12606289e00ab89ece" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>typedef Eigen::Matrix&lt;real_type, Eigen::Dynamic, Eigen::Dynamic&gt; matN</definition>
        <argsstring></argsstring>
        <name>matN</name>
        <briefdescription>
<para>NxN matrix of real number type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="83" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, 2, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;real_type, 2, 1&gt; vec2</definition>
        <argsstring></argsstring>
        <name>vec2</name>
        <briefdescription>
<para>2x1 vector type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="85" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a7ec4c927dc2333696fdbaba6ed21928a" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, 2, 2 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;real_type, 2, 2&gt; mat2</definition>
        <argsstring></argsstring>
        <name>mat2</name>
        <briefdescription>
<para>2x2 matrix type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="86" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a4d9d383c84decc30da0584a4b8fdb4c9" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" kindref="member">vec2</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;vec2, Eigen::Dynamic, 1&gt; vec_vec2</definition>
        <argsstring></argsstring>
        <name>vec_vec2</name>
        <briefdescription>
<para>Nx1 vector of 2x1 vector type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="87" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1af2012ad1b032dc61911039bcb399d89f" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a7ec4c927dc2333696fdbaba6ed21928a" kindref="member">mat2</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;mat2, Eigen::Dynamic, 1&gt; vec_mat2</definition>
        <argsstring></argsstring>
        <name>vec_mat2</name>
        <briefdescription>
<para>Nx1 vector of 2x2 matrix type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="88" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a8d1d0b20842488658263868b59b48359" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" kindref="member">vec2</ref>, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>typedef Eigen::Matrix&lt;vec2, Eigen::Dynamic, Eigen::Dynamic&gt; mat_vec2</definition>
        <argsstring></argsstring>
        <name>mat_vec2</name>
        <briefdescription>
<para>NxN matrix of 2x1 vector type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="89" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1afd592c9c993325658913aafaef90a8a9" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a7ec4c927dc2333696fdbaba6ed21928a" kindref="member">mat2</ref>, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>typedef Eigen::Matrix&lt;mat2, Eigen::Dynamic, Eigen::Dynamic&gt; mat_mat2</definition>
        <argsstring></argsstring>
        <name>mat_mat2</name>
        <briefdescription>
<para>NxN matrix of 2x2 matrix type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="90" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, 3, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;real_type, 3, 1&gt; vec3</definition>
        <argsstring></argsstring>
        <name>vec3</name>
        <briefdescription>
<para>3x1 vector type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="92" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1ab2913501a2445692638388aac959ab3a" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, 3, 3 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;real_type, 3, 3&gt; mat3</definition>
        <argsstring></argsstring>
        <name>mat3</name>
        <briefdescription>
<para>3x3 matrix type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="93" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a657999786c001b6b809828cdcfc78372" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;vec3, Eigen::Dynamic, 1&gt; vec_vec3</definition>
        <argsstring></argsstring>
        <name>vec_vec3</name>
        <briefdescription>
<para>Nx1 vector of 3x1 vector type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="94" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a960533891656e635c476aec3c6cd0fcf" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;mat3, Eigen::Dynamic, 1&gt; vec_mat3</definition>
        <argsstring></argsstring>
        <name>vec_mat3</name>
        <briefdescription>
<para>Nx1 vector of 3x3 matrix type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="95" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a5a60fa415e4c66c478cd0456bfadefe1" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref>, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>typedef Eigen::Matrix&lt;vec3, Eigen::Dynamic, Eigen::Dynamic&gt; mat_vec3</definition>
        <argsstring></argsstring>
        <name>mat_vec3</name>
        <briefdescription>
<para>NxN matrix of 3x1 vector type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="96" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1ab319bbb50a2d7f5397ea95070e3fa8b5" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref>, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>typedef Eigen::Matrix&lt;mat3, Eigen::Dynamic, Eigen::Dynamic&gt; mat_mat3</definition>
        <argsstring></argsstring>
        <name>mat_mat3</name>
        <briefdescription>
<para>NxN matrix of 3x3 matrix type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="97" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, 4, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;real_type, 4, 1&gt; vec4</definition>
        <argsstring></argsstring>
        <name>vec4</name>
        <briefdescription>
<para>4x1 vector type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="99" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a175e64268781919fdedb53d0f92781ae" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, 4, 4 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;real_type, 4, 4&gt; mat4</definition>
        <argsstring></argsstring>
        <name>mat4</name>
        <briefdescription>
<para>4x4 matrix type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="100" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a53bf74d40de48e8ca919df692bcda04d" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;vec4, Eigen::Dynamic, 1&gt; vec_vec4</definition>
        <argsstring></argsstring>
        <name>vec_vec4</name>
        <briefdescription>
<para>Nx1 vector of 4x1 vector type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="101" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a839066d1ed1a8447be88df15a1fb54eb" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a175e64268781919fdedb53d0f92781ae" kindref="member">mat4</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;mat4, Eigen::Dynamic, 1&gt; vec_mat4</definition>
        <argsstring></argsstring>
        <name>vec_mat4</name>
        <briefdescription>
<para>Nx1 vector of 4x4 matrix type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="102" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1acfb077d8c912fd6992eba353fc01402b" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref>, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>typedef Eigen::Matrix&lt;vec4, Eigen::Dynamic, Eigen::Dynamic&gt; mat_vec4</definition>
        <argsstring></argsstring>
        <name>mat_vec4</name>
        <briefdescription>
<para>NxN matrix of 4x1 vector type (column vector) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="103" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1abe6fb3cd6b6da050f0b1f0e7227fa153" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a175e64268781919fdedb53d0f92781ae" kindref="member">mat4</ref>, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>typedef Eigen::Matrix&lt;mat4, Eigen::Dynamic, Eigen::Dynamic&gt; mat_mat4</definition>
        <argsstring></argsstring>
        <name>mat_mat4</name>
        <briefdescription>
<para>NxN matrix of 4x4 matrix type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="104" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a5666b2a54000e6584c30f7e90694caf7" prot="public" static="no">
        <type>Eigen::DiagonalMatrix&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, 3 &gt;</type>
        <definition>typedef Eigen::DiagonalMatrix&lt;real_type, 3&gt; scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <briefdescription>
<para>3D scaling transformation type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="106" column="33" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a5872b9727a22c13c9841e9ad605d485e" prot="public" static="no">
        <type>Eigen::Translation&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, 3 &gt;</type>
        <definition>typedef Eigen::Translation&lt;real_type, 3&gt; translate</definition>
        <argsstring></argsstring>
        <name>translate</name>
        <briefdescription>
<para>3D translation transformation type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="107" column="30" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1ae4ab45bf9b8c29407877ad7501951707" prot="public" static="no">
        <type>Eigen::AngleAxis&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> &gt;</type>
        <definition>typedef Eigen::AngleAxis&lt;real_type&gt; angleaxis</definition>
        <argsstring></argsstring>
        <name>angleaxis</name>
        <briefdescription>
<para>3D rotation transformation type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="108" column="28" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" prot="public" static="no">
        <type>Eigen::Transform&lt; <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>, 3, Eigen::Affine &gt;</type>
        <definition>typedef Eigen::Transform&lt;real_type, 3, Eigen::Affine&gt; affine</definition>
        <argsstring></argsstring>
        <name>affine</name>
        <briefdescription>
<para>3D affine transformation type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="109" column="28" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1ab685333fc1f664e4a5fe7773cfe1f247" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a5666b2a54000e6584c30f7e90694caf7" kindref="member">scale</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;scale, Eigen::Dynamic, 1&gt; vec_scale</definition>
        <argsstring></argsstring>
        <name>vec_scale</name>
        <briefdescription>
<para>Nx1 vector of 3D scaling transformation type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="110" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a7f45d6aae169673d69d95350dedc4352" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1a5872b9727a22c13c9841e9ad605d485e" kindref="member">translate</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;translate, Eigen::Dynamic, 1&gt; vec_translate</definition>
        <argsstring></argsstring>
        <name>vec_translate</name>
        <briefdescription>
<para>Nx1 vector of 3D translation transformation type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="111" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1a12fb4f495d82babc0a3e045c4fb4cf59" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1ae4ab45bf9b8c29407877ad7501951707" kindref="member">angleaxis</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;angleaxis, Eigen::Dynamic, 1&gt; vec_angleaxis</definition>
        <argsstring></argsstring>
        <name>vec_angleaxis</name>
        <briefdescription>
<para>Nx1 vector of 3D rotation transformation type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="112" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceacme_1aafeea22824f3c92c6a7ccaba65e797de" prot="public" static="no">
        <type>Eigen::Matrix&lt; <ref refid="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" kindref="member">affine</ref>, Eigen::Dynamic, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;affine, Eigen::Dynamic, 1&gt; vec_affine</definition>
        <argsstring></argsstring>
        <name>vec_affine</name>
        <briefdescription>
<para>Nx1 vector of 3D affine transformation type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="113" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceacme_1a8bb96402fe1371b429c592fd314e8e41" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const Epsilon_Machine</definition>
        <argsstring></argsstring>
        <name>Epsilon_Machine</name>
        <initializer>= std::numeric_limits&lt;<ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>&gt;::<ref refid="namespaceacme_1a2e43a6aab5cf59cd689827bc9737c617" kindref="member">epsilon</ref>()</initializer>
        <briefdescription>
<para>Machine epsilon <formula id="0">$ \varepsilon $</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="124" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1af5fd13eb1169f1030848d00668f6b050" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const Epsilon_High</definition>
        <argsstring></argsstring>
        <name>Epsilon_High</name>
        <initializer>= 1.0E-16</initializer>
        <briefdescription>
<para>High precision epsilon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="125" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a335a2930accda2e8095ecf25ab3e9f6c" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const Epsilon_Medium</definition>
        <argsstring></argsstring>
        <name>Epsilon_Medium</name>
        <initializer>= 1.0E-10</initializer>
        <briefdescription>
<para>Medium precision epsilon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="126" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a0155fda5e41403be2fc7702dbaf957b9" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const Epsilon_Low</definition>
        <argsstring></argsstring>
        <name>Epsilon_Low</name>
        <initializer>= 1.0E-07</initializer>
        <briefdescription>
<para>Low precision epsilon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="127" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a4f0d424feef859c5dbf78c0b2527fd45" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const Epsilon</definition>
        <argsstring></argsstring>
        <name>Epsilon</name>
        <initializer>= <ref refid="namespaceacme_1a335a2930accda2e8095ecf25ab3e9f6c" kindref="member">Epsilon_Medium</ref></initializer>
        <briefdescription>
<para>Standard precision epsilon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="128" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a403e087893d30165e0e55bad46fb79e9" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const Infinity</definition>
        <argsstring></argsstring>
        <name>Infinity</name>
        <initializer>= std::numeric_limits&lt;<ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>&gt;::<ref refid="namespaceacme_1a38821c8c8ce9efabd64e279271120f4d" kindref="member">infinity</ref>()</initializer>
        <briefdescription>
<para>Infinity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="129" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a65d3c31b4dc55a9c20639b6b8d759115" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const NaN</definition>
        <argsstring></argsstring>
        <name>NaN</name>
        <initializer>= std::numeric_limits&lt;<ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>&gt;::quiet_NaN()</initializer>
        <briefdescription>
<para>Not-a-Number type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="130" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a94cd33426cc01eeb2b170cead4f74b36" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const PI</definition>
        <argsstring></argsstring>
        <name>PI</name>
        <initializer>= <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>(3.141592653589793238462643383279500)</initializer>
        <briefdescription>
<para><formula id="1">$ \pi $</formula> input </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="132" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a9b758bb4a6910ca11d958c093dc6911e" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const PI2</definition>
        <argsstring></argsstring>
        <name>PI2</name>
        <initializer>= <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>(6.283185307179586476925286766559000)</initializer>
        <briefdescription>
<para><formula id="2">$ 2\pi $</formula> input </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="133" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ab2c84fc2f2030fefa569b590e47a6c66" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const PIdiv180</definition>
        <argsstring></argsstring>
        <name>PIdiv180</name>
        <initializer>= <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>(0.017453292519943295769236907684886)</initializer>
        <briefdescription>
<para><formula id="3">$ \pi/180 $</formula> input </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="134" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ada5a21f7b6e22a96af8d545fa607c17f" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref> const</type>
        <definition>real_type const _180divPI</definition>
        <argsstring></argsstring>
        <name>_180divPI</name>
        <initializer>= <ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref>(57.295779513082320876798154814105000)</initializer>
        <briefdescription>
<para><formula id="4">$ 180/\pi $</formula> input </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="135" column="26" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a8e3867e9d4af5c03b6c481ea5d92a6c8" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" kindref="member">vec2</ref> const</type>
        <definition>vec2 const UnitX_vec2</definition>
        <argsstring></argsstring>
        <name>UnitX_vec2</name>
        <initializer>= vec2::UnitX()</initializer>
        <briefdescription>
<para>X axis unit vec2 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="137" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a24000f928943c1a9108034e09f5db034" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" kindref="member">vec2</ref> const</type>
        <definition>vec2 const UnitY_vec2</definition>
        <argsstring></argsstring>
        <name>UnitY_vec2</name>
        <initializer>= vec2::UnitY()</initializer>
        <briefdescription>
<para>Y axis unit vec2 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="138" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a5341ff980adac63b1127dd52bca9b137" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" kindref="member">vec2</ref> const</type>
        <definition>vec2 const NaN_vec2</definition>
        <argsstring></argsstring>
        <name>NaN_vec2</name>
        <initializer>= vec2::Constant(<ref refid="namespaceacme_1a65d3c31b4dc55a9c20639b6b8d759115" kindref="member">NaN</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number vec2 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="139" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a55e88a087d958b5819bb86596be95b89" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a7ec4c927dc2333696fdbaba6ed21928a" kindref="member">mat2</ref> const</type>
        <definition>mat2 const NaN_mat2</definition>
        <argsstring></argsstring>
        <name>NaN_mat2</name>
        <initializer>= mat2::Constant(<ref refid="namespaceacme_1a65d3c31b4dc55a9c20639b6b8d759115" kindref="member">NaN</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number mat2 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="140" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a01740f1cef0eccf5c8c8d848e24e9d91" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" kindref="member">vec2</ref> const</type>
        <definition>vec2 const Zeros_vect2</definition>
        <argsstring></argsstring>
        <name>Zeros_vect2</name>
        <initializer>= vec2::Zero()</initializer>
        <briefdescription>
<para>Zeros vec2 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="141" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a8e601b36fede9b76e1a2724b9841e0a7" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a7ec4c927dc2333696fdbaba6ed21928a" kindref="member">mat2</ref> const</type>
        <definition>mat2 const Zeros_mat2</definition>
        <argsstring></argsstring>
        <name>Zeros_mat2</name>
        <initializer>= mat2::Zero()</initializer>
        <briefdescription>
<para>Zeros mat2 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="142" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ac27f3e3d647a1dc880cb0dacda184fce" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" kindref="member">vec2</ref> const</type>
        <definition>vec2 const Ones_vec2</definition>
        <argsstring></argsstring>
        <name>Ones_vec2</name>
        <initializer>= vec2::Constant(1.0)</initializer>
        <briefdescription>
<para>Ones vec2 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="143" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a024657ac992032fe8708965542546726" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a7ec4c927dc2333696fdbaba6ed21928a" kindref="member">mat2</ref> const</type>
        <definition>mat2 const Ones_mat2</definition>
        <argsstring></argsstring>
        <name>Ones_mat2</name>
        <initializer>= mat2::Constant(1.0)</initializer>
        <briefdescription>
<para>Ones mat2 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="144" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a1c2081a2344ff6c581390a470b1fa18f" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a7ec4c927dc2333696fdbaba6ed21928a" kindref="member">mat2</ref> const</type>
        <definition>mat2 const Identity_mat2</definition>
        <argsstring></argsstring>
        <name>Identity_mat2</name>
        <initializer>= mat2::Identity()</initializer>
        <briefdescription>
<para>Identity mat2 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="145" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a705ecf2eeb8d5231b8d545fb65c44e37" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
        <definition>vec3 const UnitX_vec3</definition>
        <argsstring></argsstring>
        <name>UnitX_vec3</name>
        <initializer>= vec3::UnitX()</initializer>
        <briefdescription>
<para>X axis unit vec3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="147" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1abcc9b357edc17617f9a0dd8826ff8222" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
        <definition>vec3 const UnitY_vec3</definition>
        <argsstring></argsstring>
        <name>UnitY_vec3</name>
        <initializer>= vec3::UnitY()</initializer>
        <briefdescription>
<para>Y axis unit vec3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="148" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ad396dd16fe49ce4b3c200f260ebcd310" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
        <definition>vec3 const UnitZ_vec3</definition>
        <argsstring></argsstring>
        <name>UnitZ_vec3</name>
        <initializer>= vec3::UnitZ()</initializer>
        <briefdescription>
<para>Z axis unit vec3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="149" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
        <definition>vec3 const NaN_vec3</definition>
        <argsstring></argsstring>
        <name>NaN_vec3</name>
        <initializer>= vec3::Constant(<ref refid="namespaceacme_1a65d3c31b4dc55a9c20639b6b8d759115" kindref="member">NaN</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number vec3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="150" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a672b9f4a58b62ea41c5fcbdce3997a71" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref> const</type>
        <definition>mat3 const NaN_mat3</definition>
        <argsstring></argsstring>
        <name>NaN_mat3</name>
        <initializer>= mat3::Constant(<ref refid="namespaceacme_1a65d3c31b4dc55a9c20639b6b8d759115" kindref="member">NaN</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number mat3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="151" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a1ed1ac59d078725d1b6222d71db66a04" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
        <definition>vec3 const Zeros_vec3</definition>
        <argsstring></argsstring>
        <name>Zeros_vec3</name>
        <initializer>= vec3::Zero()</initializer>
        <briefdescription>
<para>Zeros vec3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="152" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ae9749863a7ad34200b1acf09349d398e" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref> const</type>
        <definition>mat3 const Zeros_mat3</definition>
        <argsstring></argsstring>
        <name>Zeros_mat3</name>
        <initializer>= mat3::Zero()</initializer>
        <briefdescription>
<para>Zeros mat3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="153" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ace0529d8204ca6b0d15603cc68890c03" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
        <definition>vec3 const Ones_vec3</definition>
        <argsstring></argsstring>
        <name>Ones_vec3</name>
        <initializer>= vec3::Constant(1.0)</initializer>
        <briefdescription>
<para>Ones vec3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="154" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a89402a4d57b4cabe25a34abb07570011" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref> const</type>
        <definition>mat3 const Ones_mat3</definition>
        <argsstring></argsstring>
        <name>Ones_mat3</name>
        <initializer>= mat3::Constant(1.0)</initializer>
        <briefdescription>
<para>Ones mat3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="155" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a5bd2c6db4c9fdc60c7f6413cc8de6fe3" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref> const</type>
        <definition>mat3 const Identity_mat3</definition>
        <argsstring></argsstring>
        <name>Identity_mat3</name>
        <initializer>= mat3::Identity()</initializer>
        <briefdescription>
<para>Identity mat3 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="156" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a5762fde74799a226fd54d880e0de5946" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref> const</type>
        <definition>vec4 const UnitX_vec4</definition>
        <argsstring></argsstring>
        <name>UnitX_vec4</name>
        <initializer>= vec4::UnitX()</initializer>
        <briefdescription>
<para>X axis unit vec4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="158" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a9c9cf93ffba9763c22023767138458cf" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref> const</type>
        <definition>vec4 const UnitY_vec4</definition>
        <argsstring></argsstring>
        <name>UnitY_vec4</name>
        <initializer>= vec4::UnitY()</initializer>
        <briefdescription>
<para>Y axis unit vec4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="159" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a89b4718ffa05a80575c1ef9f5c19c440" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref> const</type>
        <definition>vec4 const UnitZ_vec4</definition>
        <argsstring></argsstring>
        <name>UnitZ_vec4</name>
        <initializer>= vec4::UnitZ()</initializer>
        <briefdescription>
<para>Z axis unit vec4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="160" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1aa1ae08342378261cebd989875454624a" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref> const</type>
        <definition>vec4 const UnitW_vec4</definition>
        <argsstring></argsstring>
        <name>UnitW_vec4</name>
        <initializer>= vec4::UnitW()</initializer>
        <briefdescription>
<para>W axis unit vec4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="161" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a1573025b5584031f9ab5dc309e4be0c0" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref> const</type>
        <definition>vec4 const NaN_vec4</definition>
        <argsstring></argsstring>
        <name>NaN_vec4</name>
        <initializer>= vec4::Constant(<ref refid="namespaceacme_1a65d3c31b4dc55a9c20639b6b8d759115" kindref="member">NaN</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number vec4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="162" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1aefe5af49098b0dcc36c17b4777e7388c" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a175e64268781919fdedb53d0f92781ae" kindref="member">mat4</ref> const</type>
        <definition>mat4 const NaN_mat4</definition>
        <argsstring></argsstring>
        <name>NaN_mat4</name>
        <initializer>= mat4::Constant(<ref refid="namespaceacme_1a65d3c31b4dc55a9c20639b6b8d759115" kindref="member">NaN</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number mat4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="163" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ac5c76fa7cc197b97fa8ad0e094031017" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref> const</type>
        <definition>vec4 const Zeros_vec4</definition>
        <argsstring></argsstring>
        <name>Zeros_vec4</name>
        <initializer>= vec4::Zero()</initializer>
        <briefdescription>
<para>Zeros vec4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="164" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1aeb3204c3e683e7c37f3f693cd7afa8a2" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a175e64268781919fdedb53d0f92781ae" kindref="member">mat4</ref> const</type>
        <definition>mat4 const Zeros_mat4</definition>
        <argsstring></argsstring>
        <name>Zeros_mat4</name>
        <initializer>= mat4::Zero()</initializer>
        <briefdescription>
<para>Zeros mat4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="165" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a69cfeeca3649721260a8ece69c6787b2" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref> const</type>
        <definition>vec4 const Ones_vec4</definition>
        <argsstring></argsstring>
        <name>Ones_vec4</name>
        <initializer>= vec4::Constant(1.0)</initializer>
        <briefdescription>
<para>Ones vec4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="166" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ae84c11548e827049de439849ae3c2c0e" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a175e64268781919fdedb53d0f92781ae" kindref="member">mat4</ref> const</type>
        <definition>mat4 const Ones_mat4</definition>
        <argsstring></argsstring>
        <name>Ones_mat4</name>
        <initializer>= mat4::Constant(1.0)</initializer>
        <briefdescription>
<para>Ones mat4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="167" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1adfeb541d8d4170cedcc12574767d4a90" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a175e64268781919fdedb53d0f92781ae" kindref="member">mat4</ref> const</type>
        <definition>mat4 const Identity_mat4</definition>
        <argsstring></argsstring>
        <name>Identity_mat4</name>
        <initializer>= mat4::Identity()</initializer>
        <briefdescription>
<para>Identity mat4 type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="168" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a4befad2c8ea16ae9e6000add47932bae" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" kindref="member">vec2</ref></type>
        <definition>vec2 vec2_goat</definition>
        <argsstring></argsstring>
        <name>vec2_goat</name>
        <initializer>= <ref refid="namespaceacme_1ac96add4cca33011f37f16bdf23bd42d7" kindref="member">vec2</ref>(<ref refid="namespaceacme_1a5341ff980adac63b1127dd52bca9b137" kindref="member">NaN_vec2</ref>)</initializer>
        <briefdescription>
<para>Scapegoat vec2 type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="170" column="15" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1afd9f5586d47a1f57cc3b0ace03d43ea9" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 vec3_goat</definition>
        <argsstring></argsstring>
        <name>vec3_goat</name>
        <initializer>= <ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref>(<ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">NaN_vec3</ref>)</initializer>
        <briefdescription>
<para>Scapegoat vec3 type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="171" column="15" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a9816c0da2db6d7938391bf9a63fdc716" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref></type>
        <definition>vec4 vec4_goat</definition>
        <argsstring></argsstring>
        <name>vec4_goat</name>
        <initializer>= <ref refid="namespaceacme_1a0a0542c148a09eb136a719edc6fdbf97" kindref="member">vec4</ref>(<ref refid="namespaceacme_1a1573025b5584031f9ab5dc309e4be0c0" kindref="member">NaN_vec4</ref>)</initializer>
        <briefdescription>
<para>Scapegoat vec4 type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="172" column="15" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ae35e2e11129d75b193474f3485fae286" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a7ec4c927dc2333696fdbaba6ed21928a" kindref="member">mat2</ref></type>
        <definition>mat2 mat2_goat</definition>
        <argsstring></argsstring>
        <name>mat2_goat</name>
        <initializer>= <ref refid="namespaceacme_1a7ec4c927dc2333696fdbaba6ed21928a" kindref="member">mat2</ref>(<ref refid="namespaceacme_1a55e88a087d958b5819bb86596be95b89" kindref="member">NaN_mat2</ref>)</initializer>
        <briefdescription>
<para>Scapegoat mat2 type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="173" column="15" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a6d9b2e7b68cbfbf7161b2f790d769374" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref></type>
        <definition>mat3 mat3_goat</definition>
        <argsstring></argsstring>
        <name>mat3_goat</name>
        <initializer>= <ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref>(<ref refid="namespaceacme_1a672b9f4a58b62ea41c5fcbdce3997a71" kindref="member">NaN_mat3</ref>)</initializer>
        <briefdescription>
<para>Scapegoat mat3 type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="174" column="15" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a47f55a1d8644e8c5468037a91edee528" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceacme_1a175e64268781919fdedb53d0f92781ae" kindref="member">mat4</ref></type>
        <definition>mat4 mat4_goat</definition>
        <argsstring></argsstring>
        <name>mat4_goat</name>
        <initializer>= <ref refid="namespaceacme_1a175e64268781919fdedb53d0f92781ae" kindref="member">mat4</ref>(<ref refid="namespaceacme_1aefe5af49098b0dcc36c17b4777e7388c" kindref="member">NaN_mat4</ref>)</initializer>
        <briefdescription>
<para>Scapegoat mat4 type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme.hh" line="175" column="15" bodyfile="/Users/davide/Documents/Git/acme/include/acme.hh" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a503e0ebe6bd11518ae6090dda8bda8fe" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1box" kindref="compound">box</ref> const</type>
        <definition>box const NaN_box</definition>
        <argsstring></argsstring>
        <name>NaN_box</name>
        <initializer>= <ref refid="classacme_1_1box" kindref="compound">box</ref>(<ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>, <ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>, 0, 0)</initializer>
        <briefdescription>
<para>Not-a-Number box type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="331" column="20" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a76648c3fe2164dfaec07aa55500751fe" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1box" kindref="compound">box</ref></type>
        <definition>box box_goat</definition>
        <argsstring></argsstring>
        <name>box_goat</name>
        <initializer>= <ref refid="classacme_1_1box" kindref="compound">box</ref>(<ref refid="namespaceacme_1a503e0ebe6bd11518ae6090dda8bda8fe" kindref="member">NaN_box</ref>)</initializer>
        <briefdescription>
<para>Scapegoat box type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="332" column="14" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a518c4245f4621703dde2d33b1e66124e" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1line" kindref="compound">line</ref> const</type>
        <definition>line const NaN_line</definition>
        <argsstring></argsstring>
        <name>NaN_line</name>
        <initializer>= <ref refid="classacme_1_1line" kindref="compound">line</ref>(<ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>, <ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number line type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_line.hh" line="171" column="21" bodyfile="/Users/davide/Documents/Git/acme/include/acme_line.hh" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1af85d93ea3a85fce884819fa538273c0b" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1line" kindref="compound">line</ref></type>
        <definition>line line_goat</definition>
        <argsstring></argsstring>
        <name>line_goat</name>
        <initializer>= <ref refid="classacme_1_1line" kindref="compound">line</ref>(<ref refid="namespaceacme_1a518c4245f4621703dde2d33b1e66124e" kindref="member">NaN_line</ref>)</initializer>
        <briefdescription>
<para>Scapegoat line type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_line.hh" line="172" column="15" bodyfile="/Users/davide/Documents/Git/acme/include/acme_line.hh" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a06cef766bd30f2a1d018b0ca084b5208" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const</type>
        <definition>plane const NaN_plane</definition>
        <argsstring></argsstring>
        <name>NaN_plane</name>
        <initializer>= <ref refid="classacme_1_1plane" kindref="compound">plane</ref>(<ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>, <ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number plane type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="190" column="22" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a73f5dcc6075456102357638502fcfd1e" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const</type>
        <definition>plane const plane_goat</definition>
        <argsstring></argsstring>
        <name>plane_goat</name>
        <initializer>= <ref refid="classacme_1_1plane" kindref="compound">plane</ref>(<ref refid="namespaceacme_1a06cef766bd30f2a1d018b0ca084b5208" kindref="member">NaN_plane</ref>)</initializer>
        <briefdescription>
<para>Scapegoat plane type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_plane.hh" line="191" column="22" bodyfile="/Users/davide/Documents/Git/acme/include/acme_plane.hh" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ac73e52625fa81263a229f6a644ead9d2" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref> const</type>
        <definition>ray const NaN_ray</definition>
        <argsstring></argsstring>
        <name>NaN_ray</name>
        <initializer>= <ref refid="classacme_1_1ray" kindref="compound">ray</ref>(<ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>, <ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number ray type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_ray.hh" line="171" column="20" bodyfile="/Users/davide/Documents/Git/acme/include/acme_ray.hh" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a15f2bd5cde96ac18fb04021d2b0152c4" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref></type>
        <definition>ray ray_goat</definition>
        <argsstring></argsstring>
        <name>ray_goat</name>
        <initializer>= <ref refid="classacme_1_1ray" kindref="compound">ray</ref>(<ref refid="namespaceacme_1ac73e52625fa81263a229f6a644ead9d2" kindref="member">NaN_ray</ref>)</initializer>
        <briefdescription>
<para>Scapegoat ray type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_ray.hh" line="172" column="14" bodyfile="/Users/davide/Documents/Git/acme/include/acme_ray.hh" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ab875894428dcb76833fcf7020615ad36" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const</type>
        <definition>segment const NaN_segment</definition>
        <argsstring></argsstring>
        <name>NaN_segment</name>
        <initializer>= <ref refid="classacme_1_1segment" kindref="compound">segment</ref>(<ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>, <ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number segment type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="171" column="24" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1af08c1aad1c29e0e8937c8a01bcba03ce" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref></type>
        <definition>segment segment_goat</definition>
        <argsstring></argsstring>
        <name>segment_goat</name>
        <initializer>= <ref refid="classacme_1_1segment" kindref="compound">segment</ref>(<ref refid="namespaceacme_1ab875894428dcb76833fcf7020615ad36" kindref="member">NaN_segment</ref>)</initializer>
        <briefdescription>
<para>Scapegoat segment type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_segment.hh" line="172" column="18" bodyfile="/Users/davide/Documents/Git/acme/include/acme_segment.hh" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1ab3cade0a0f509539e4230e1a5c80748b" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const</type>
        <definition>triangle const NaN_triangle</definition>
        <argsstring></argsstring>
        <name>NaN_triangle</name>
        <initializer>= <ref refid="classacme_1_1triangle" kindref="compound">triangle</ref>(<ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>, <ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>, <ref refid="namespaceacme_1a8940a38a2f1226d510edf9b5941f9367" kindref="member">acme::NaN_vec3</ref>)</initializer>
        <briefdescription>
<para>Not-a-Number triangle type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="207" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceacme_1a313b490f314acad37f0008c2f7871ca4" prot="public" static="yes" mutable="no">
        <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref></type>
        <definition>triangle triangle_goat</definition>
        <argsstring></argsstring>
        <name>triangle_goat</name>
        <initializer>= <ref refid="classacme_1_1triangle" kindref="compound">triangle</ref>(<ref refid="namespaceacme_1ab3cade0a0f509539e4230e1a5c80748b" kindref="member">NaN_triangle</ref>)</initializer>
        <briefdescription>
<para>Scapegoat triangle type (throwaway non-const object) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" line="208" column="19" bodyfile="/Users/davide/Documents/Git/acme/include/acme_triangle.hh" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceacme_1a83a949e44714165c4f7bc3b29fc69d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(line const &amp;line0, line const &amp;line1, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1line" kindref="compound">line</ref> const &amp;</type>
          <declname>line0</declname>
          <briefdescription><para>Input line 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1line" kindref="compound">line</ref> const &amp;</type>
          <declname>line1</declname>
          <briefdescription><para>Input line 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Output point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection between two lines <linebreak/>
WARNING: This function does not support parallel objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="44" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="44" bodyend="67" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="55" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a1ee38606670e03a6904e408168118fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(ray const &amp;ray0, ray const &amp;ray1, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref> const &amp;</type>
          <declname>ray0</declname>
          <briefdescription><para>Input ray 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref> const &amp;</type>
          <declname>ray1</declname>
          <briefdescription><para>Input ray 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Output point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection between two rays <linebreak/>
WARNING: This function does not support parallel objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="72" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="72" bodyend="83" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="64" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1ae1882d0813c338c09e6352eec9b02184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(segment const &amp;segment0, segment const &amp;segment1, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>segment0</declname>
          <briefdescription><para>Input segment 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>segment1</declname>
          <briefdescription><para>Input segment 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Output point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection between two segments <linebreak/>
WARNING: This function does not support parallel objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="88" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="88" bodyend="99" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="73" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a2127741ec9909e966a77ce42503aa71c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(box const &amp;box0, box const &amp;box1, box &amp;box)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1box" kindref="compound">box</ref> const &amp;</type>
          <declname>box0</declname>
          <briefdescription><para>Input box 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1box" kindref="compound">box</ref> const &amp;</type>
          <declname>box1</declname>
          <briefdescription><para>Input box 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1box" kindref="compound">box</ref> &amp;</type>
          <declname>box</declname>
          <briefdescription><para>Output box </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Intersection between two boxes <linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="104" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="104" bodyend="124" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="81" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a9d6d486dcb064f87f5af2dbfa8482c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(plane const &amp;plane0, plane const &amp;plane1, plane const &amp;plane2, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane0</declname>
          <briefdescription><para>Input plane 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane1</declname>
          <briefdescription><para>Input plane 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane2</declname>
          <briefdescription><para>Input plane 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Output point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection between three planes <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="129" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="129" bodyend="154" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="90" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a9ee7e46779f818212aa7f13af74b52e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(plane const &amp;plane0, plane const &amp;plane1, line &amp;line)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane0</declname>
          <briefdescription><para>Input plane 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane1</declname>
          <briefdescription><para>Input plane 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1line" kindref="compound">line</ref> &amp;</type>
          <declname>line</declname>
          <briefdescription><para>Output line </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection between two planes <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="159" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="159" bodyend="180" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="100" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a1930fe5160333c532287555c17a1b03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(ray const &amp;ray, plane const &amp;plane, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref> const &amp;</type>
          <declname>ray</declname>
          <briefdescription><para>Input ray </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane</declname>
          <briefdescription><para>Input plane </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Output point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection ray with plane <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="185" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="185" bodyend="208" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="109" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a5b25b823b8db64f28040fa00b98d8d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(line const &amp;line, plane const &amp;plane, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1line" kindref="compound">line</ref> const &amp;</type>
          <declname>line</declname>
          <briefdescription><para>Input line </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane</declname>
          <briefdescription><para>Input plane </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Output point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection line with plane <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="213" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="213" bodyend="229" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="117" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a56ab590aebe3e89f81149ddb35084ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(segment const &amp;segment, plane const &amp;plane, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>segment</declname>
          <briefdescription><para>Input segment </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane</declname>
          <briefdescription><para>Input plane </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Output point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection segment with plane (no precalculated normal) <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="234" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="234" bodyend="261" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="126" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a8941fed6218ee88b1b204b24a9ad3abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(ray const &amp;ray, triangle const &amp;triangle, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref> const &amp;</type>
          <declname>ray</declname>
          <briefdescription><para>Input ray </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const &amp;</type>
          <declname>triangle</declname>
          <briefdescription><para>Input triangle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Output point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection ray with triangle (no precalculated normal) <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="266" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="266" bodyend="303" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="135" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a9b9786cf2c618f02c1d0b3002261a665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(line const &amp;line, triangle const &amp;triangle, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1line" kindref="compound">line</ref> const &amp;</type>
          <declname>line</declname>
          <briefdescription><para>Input line </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const &amp;</type>
          <declname>triangle</declname>
          <briefdescription><para>Input triangle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Output point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection line with triangle (no precalculated normal) <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="308" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="308" bodyend="340" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="144" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a31719eb9e541292c34d7805948971658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(plane const &amp;plane, triangle const &amp;triangle, segment &amp;segment)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane</declname>
          <briefdescription><para>Input plane </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const &amp;</type>
          <declname>triangle</declname>
          <briefdescription><para>Input triangle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
          <declname>segment</declname>
          <briefdescription><para>Ouput plane </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection plane with triangle <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="345" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="345" bodyend="404" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="153" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a78c321191a3c6e25540d4b9f969e58b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(line const &amp;line, circle const &amp;circle, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1line" kindref="compound">line</ref> const &amp;</type>
          <declname>line</declname>
          <briefdescription><para>Input line </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>circle</declname>
          <briefdescription><para>Input circle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Ouput point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection line and circle <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="409" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="409" bodyend="425" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="162" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1ab4d24b87ea7ec3032b532c9af1f438f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(ray const &amp;ray, circle const &amp;circle, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref> const &amp;</type>
          <declname>ray</declname>
          <briefdescription><para>Input ray </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>circle</declname>
          <briefdescription><para>Input circle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Ouput point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection ray with circle <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="430" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="430" bodyend="439" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="171" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1af4a680346088a1eeb1c9daaedff73911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(segment const &amp;segment, circle const &amp;circle, vec3 &amp;point)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>segment</declname>
          <briefdescription><para>Input segment </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>circle</declname>
          <briefdescription><para>Input circle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Ouput point </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection segment with circle <linebreak/>
WARNING: This function does not support coplanarity! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="444" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="444" bodyend="453" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="180" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a50217497abfc4faadd7000200587057c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(segment const &amp;segment0, segment const &amp;segment1, segment &amp;segment)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>segment0</declname>
          <briefdescription><para>Input segment 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>segment1</declname>
          <briefdescription><para>Input segment 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
          <declname>segment</declname>
          <briefdescription><para>Output segment </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection between two segments <linebreak/>
WARNING: This function only support coplanar objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="458" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="458" bodyend="579" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="189" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a67e3c120ddc0c3d0e9b75d73dd7a914d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(line const &amp;line, segment const &amp;segment_in, segment &amp;segment_out)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1line" kindref="compound">line</ref> const &amp;</type>
          <declname>line</declname>
          <briefdescription><para>Input line </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>segment_in</declname>
          <briefdescription><para>Input segment </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
          <declname>segment_out</declname>
          <briefdescription><para>Output segment </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection between line and segment <linebreak/>
WARNING: This function only support coplanar objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="584" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="584" bodyend="598" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="198" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a971c863304240a9da8d528c7294a2b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(ray const &amp;ray, segment const &amp;segment_in, segment &amp;segment_out)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref> const &amp;</type>
          <declname>ray</declname>
          <briefdescription><para>Input ray </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>segment_in</declname>
          <briefdescription><para>Input segment </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
          <declname>segment_out</declname>
          <briefdescription><para>Output segment </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection between ray and segment <linebreak/>
WARNING: This function only support coplanar objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="603" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="603" bodyend="632" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="207" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a687b50d1ce248dd3db20e6121c053855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(line const &amp;line, circle const &amp;circle, segment &amp;segment)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1line" kindref="compound">line</ref> const &amp;</type>
          <declname>line</declname>
          <briefdescription><para>Input line </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>circle</declname>
          <briefdescription><para>Input circle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
          <declname>segment</declname>
          <briefdescription><para>Ouput segment </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection line with circle <linebreak/>
WARNING: This function only support coplanar objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="637" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="637" bodyend="677" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="216" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a680b74ca0585b3fbc185e8d736234827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(ray const &amp;ray, circle const &amp;circle, segment &amp;segment_out)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref> const &amp;</type>
          <declname>ray</declname>
          <briefdescription><para>Input ray </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>circle</declname>
          <briefdescription><para>Input circle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
          <declname>segment</declname>
          <briefdescription><para>Ouput segment </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection ray with circle <linebreak/>
WARNING: This function only support coplanar objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="682" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="682" bodyend="695" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="225" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a851d58115aa210c92aaf1806e6df5c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(plane const &amp;plane, circle const &amp;circle, segment &amp;segment)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>plane</declname>
          <briefdescription><para>Input plane </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>circle</declname>
          <briefdescription><para>Input circle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
          <declname>segment</declname>
          <briefdescription><para>Ouput segment </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection plane with circle <linebreak/>
WARNING: This function only support coplanar objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="700" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="700" bodyend="712" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="234" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1ad175a435e619678208ae9fc61b481450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(segment const &amp;segment_in, circle const &amp;circle, segment &amp;segment_out)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>segment_in</declname>
          <briefdescription><para>Input segment </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>circle</declname>
          <briefdescription><para>Input circle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
          <declname>segment_out</declname>
          <briefdescription><para>Ouput segment </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection segment with circle <linebreak/>
WARNING: This function only support coplanar objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="717" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="717" bodyend="730" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="243" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1af87f09d0bebc0daca2249c475b8c2544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersection</definition>
        <argsstring>(circle const &amp;circle, triangle const &amp;triangle, segment &amp;segment_out)</argsstring>
        <name>intersection</name>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>circle</declname>
          <briefdescription><para>Input circle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const &amp;</type>
          <declname>triangle</declname>
          <briefdescription><para>Input triangle </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> &amp;</type>
          <declname>segment</declname>
          <briefdescription><para>Ouput segment </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection circle with triangle <linebreak/>
WARNING: This function only support coplanar objects! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" line="735" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_intersection.cc" bodystart="735" bodyend="745" declfile="/Users/davide/Documents/Git/acme/include/acme_intersection.hh" declline="252" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a38821c8c8ce9efabd64e279271120f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type infinity</definition>
        <argsstring>(void)</argsstring>
        <name>infinity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return infinity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="44" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="44" bodyend="47" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="48" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a2e43a6aab5cf59cd689827bc9737c617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type epsilon</definition>
        <argsstring>(void)</argsstring>
        <name>epsilon</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return epsilon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="52" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="52" bodyend="55" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="52" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1abc4a3ad644d979cd3bd0efc15113f6d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type sqr</definition>
        <argsstring>(real_type input)</argsstring>
        <name>sqr</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Square. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="60" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="60" bodyend="63" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="56" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a07159d12eeb17b2b57c918ca6830989d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type cub</definition>
        <argsstring>(real_type input)</argsstring>
        <name>cub</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Cubic. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="68" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="68" bodyend="71" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="62" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1aa9a465256d9ab42dc93ced0c44166fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type sqrt</definition>
        <argsstring>(real_type input)</argsstring>
        <name>sqrt</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Square root. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="76" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="76" bodyend="79" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="68" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1aca89904f979589d813ea4f8b26a8ba40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type pow</definition>
        <argsstring>(real_type base, real_type exponent)</argsstring>
        <name>pow</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>base</declname>
          <briefdescription><para>Input base </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>exponent</declname>
          <briefdescription><para>Input exponent </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Power. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="84" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="84" bodyend="89" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="74" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a065e81dd13cdee1801ef09f652acba65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type abs</definition>
        <argsstring>(real_type input)</argsstring>
        <name>abs</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Absolute value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="94" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="94" bodyend="97" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="81" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a40e494274276ef8a36723b1b25a24aea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type max</definition>
        <argsstring>(real_type input0, real_type input1)</argsstring>
        <name>max</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input0</declname>
          <briefdescription><para>Input value 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input1</declname>
          <briefdescription><para>Input value 1 </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Maximum between inputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="102" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="102" bodyend="107" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="87" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a520d438bd7de5e4c98204e4b62adfdd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type min</definition>
        <argsstring>(real_type input0, real_type input1)</argsstring>
        <name>min</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input0</declname>
          <briefdescription><para>Input value 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input1</declname>
          <briefdescription><para>Input value 1 </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Minimum between inputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="112" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="112" bodyend="117" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="94" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1ac1ff3a6da574a0510276dcd4db9fd95a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type max</definition>
        <argsstring>(real_type input0, real_type input1, real_type input2)</argsstring>
        <name>max</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input0</declname>
          <briefdescription><para>Input value 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input1</declname>
          <briefdescription><para>Input value 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input2</declname>
          <briefdescription><para>Input value 2 </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Maximum between three inputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="122" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="122" bodyend="128" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="102" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a98ec4a40dd32998615acdf2f8ebbf01b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type min</definition>
        <argsstring>(real_type input0, real_type input1, real_type input2)</argsstring>
        <name>min</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input0</declname>
          <briefdescription><para>Input value 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input1</declname>
          <briefdescription><para>Input value 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input2</declname>
          <briefdescription><para>Input value 2 </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Minimum between three inputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="133" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="133" bodyend="139" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="110" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1ae13b768d3ecb20412fc02bdc984aac6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type sin</definition>
        <argsstring>(real_type input)</argsstring>
        <name>sin</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Sine function [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="155" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="155" bodyend="158" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="127" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a4db792b661a922abf59fa297b9495779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type cos</definition>
        <argsstring>(real_type input)</argsstring>
        <name>cos</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Cosine function [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="163" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="163" bodyend="166" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="133" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a6d014c7da031b440fda92a581bb5980f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type tan</definition>
        <argsstring>(real_type input)</argsstring>
        <name>tan</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Tangent function [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="171" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="171" bodyend="174" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="139" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1aadfd8f0c36936e14371c7baa953ba48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type asin</definition>
        <argsstring>(real_type input)</argsstring>
        <name>asin</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Arcsine function [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="179" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="179" bodyend="182" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="145" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a5cfd2b9d11b8f33ffbe4ad99837c32c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type acos</definition>
        <argsstring>(real_type input)</argsstring>
        <name>acos</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Arccosine function [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="187" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="187" bodyend="190" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="151" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a11aa3bcfb18ad3e690480b32632ca806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type atan</definition>
        <argsstring>(real_type input)</argsstring>
        <name>atan</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Arctangent function [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="195" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="195" bodyend="198" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="157" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1accb60f5bc8e4740f437c8666c57b2a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type atan2</definition>
        <argsstring>(real_type input0, real_type input1)</argsstring>
        <name>atan2</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input0</declname>
          <briefdescription><para>Input value 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input1</declname>
          <briefdescription><para>Input value 1 </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Arctangent function [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="203" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="203" bodyend="208" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="163" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a2becbddcf5f1e6c4fc9daf88285f5573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type clamp</definition>
        <argsstring>(real_type input, real_type low, real_type high)</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>low</declname>
          <briefdescription><para>Low-end bound </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>high</declname>
          <briefdescription><para>High-end bound </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Returns the input input bounded between low and high inputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="213" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="213" bodyend="224" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="170" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1aa4704e0132775c2d05b51bbc2f4a3e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isApprox</definition>
        <argsstring>(real_type input0, real_type input1, real_type tolerance=Epsilon)</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input0</declname>
          <briefdescription><para>Input value 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input1</declname>
          <briefdescription><para>Input value 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>tolerance</declname>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks if elements are almost equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="229" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="229" bodyend="235" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="178" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a88d4dfb88df201646d101a5147d378b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isApprox</definition>
        <argsstring>(vec3 const &amp;input0, vec3 const &amp;input1, real_type tolerance=Epsilon)</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input0</declname>
          <briefdescription><para>Input value 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input1</declname>
          <briefdescription><para>Input value 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>tolerance</declname>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks if elements are almost equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="240" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="240" bodyend="248" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="186" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a98a009f23ee2ae45192b0128ef0f19ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isApprox</definition>
        <argsstring>(mat3 const &amp;input0, mat3 const &amp;input1, real_type tolerance=Epsilon)</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref> const &amp;</type>
          <declname>input0</declname>
          <briefdescription><para>Input value 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref> const &amp;</type>
          <declname>input1</declname>
          <briefdescription><para>Input value 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>tolerance</declname>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks if elements are almost equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="253" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="253" bodyend="261" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="194" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1aef1773d32788911c39ec95ff6bd4cdeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isDegenerated</definition>
        <argsstring>(vec3 const &amp;input, real_type tolerance=Epsilon)</argsstring>
        <name>isDegenerated</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input vector </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>tolerance</declname>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if vec3 is degenerated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="266" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="266" bodyend="273" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="202" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a8bb585410109dbd5ad9e7d0ec2747695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isParallel</definition>
        <argsstring>(vec3 const &amp;input0, vec3 const &amp;input1, real_type tolerance=Epsilon)</argsstring>
        <name>isParallel</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input0</declname>
          <briefdescription><para>Input vector 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input1</declname>
          <briefdescription><para>Input vector 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>tolerance</declname>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if vectors are parallel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="278" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="278" bodyend="286" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="209" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1ad45ef8868e1f44b4eb2ff2047ed29ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isOrthonormal</definition>
        <argsstring>(mat3 const &amp;input, real_type tolerance=Epsilon)</argsstring>
        <name>isOrthonormal</name>
        <param>
          <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input value </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>tolerance</declname>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if 3x3 matrix is othonormal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="291" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="291" bodyend="301" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="217" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1abedb96159c25c897a36245e2ed9ee890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ae4ab45bf9b8c29407877ad7501951707" kindref="member">angleaxis</ref></type>
        <definition>angleaxis rotate</definition>
        <argsstring>(real_type angle, vec3 const &amp;axis)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>angle</declname>
          <briefdescription><para>Input angle [rad] </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>axis</declname>
          <briefdescription><para>Input axis </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Returns a rotation as a rotation angle around an arbitrary axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="306" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="306" bodyend="311" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="224" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a3be0ba810ccd762aaf3c20282474fb2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ae4ab45bf9b8c29407877ad7501951707" kindref="member">angleaxis</ref></type>
        <definition>angleaxis rotate</definition>
        <argsstring>(real_type angle, std::string const &amp;axis)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>angle</declname>
          <briefdescription><para>Input angle [rad] </para>
</briefdescription>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>axis</declname>
          <briefdescription><para>Input axis </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Returns a rotation as a rotation angle around an arbitrary axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="316" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="316" bodyend="328" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="232" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1ad9a86861ab9c9bb9089424c7fb925a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type angle</definition>
        <argsstring>(vec3 const &amp;input0, vec3 const &amp;input1)</argsstring>
        <name>angle</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input0</declname>
          <briefdescription><para>Input vector 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input1</declname>
          <briefdescription><para>Input vector 1 </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Angle between vectors [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="333" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="333" bodyend="338" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="239" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a1a46dba4aba27ae018a474d93a2bb34b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eulerAngles</definition>
        <argsstring>(mat3 const &amp;rotation, size_t i, size_t j, size_t k, vec3 &amp;angles)</argsstring>
        <name>eulerAngles</name>
        <param>
          <type><ref refid="namespaceacme_1ab2913501a2445692638388aac959ab3a" kindref="member">mat3</ref> const &amp;</type>
          <declname>rotation</declname>
          <briefdescription><para>3x3 rotation matrix </para>
</briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Rotation index </para>
</briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
          <briefdescription><para>Rotation index </para>
</briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
          <briefdescription><para>Rotation index </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>angles</declname>
          <briefdescription><para>Output euler angles [rad] </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Calculate Euler angles [rad]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="343" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="343" bodyend="354" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="246" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1adf17b90b1e454d03cb5063a83a2db367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transformVector</definition>
        <argsstring>(vec3 &amp;vector, affine const &amp;matrix)</argsstring>
        <name>transformVector</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>vector</declname>
          <briefdescription><para>Input vector </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" kindref="member">affine</ref> const &amp;</type>
          <declname>matrix</declname>
          <briefdescription><para>4x4 transformation matrix </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Transform VECTOR with affine transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="370" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="370" bodyend="375" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="265" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1ac91fbacab25fab18f1a8db48303ab26e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transformPoint</definition>
        <argsstring>(vec3 &amp;vector, affine const &amp;matrix)</argsstring>
        <name>transformPoint</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> &amp;</type>
          <declname>point</declname>
          <defname>vector</defname>
          <briefdescription><para>Input point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" kindref="member">affine</ref> const &amp;</type>
          <declname>matrix</declname>
          <briefdescription><para>4x4 transformation matrix </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Transform POINT with affine transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_math.cc" line="380" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_math.cc" bodystart="380" bodyend="385" declfile="/Users/davide/Documents/Git/acme/include/acme_math.hh" declline="272" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a5538ab24f65c9a78953a6619376a618a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
        <definition>ostream_type &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream_type &amp;os, line const &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
          <declname>os</declname>
          <briefdescription><para>Output stream </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1line" kindref="compound">line</ref> const &amp;</type>
          <declname>obj</declname>
          <briefdescription><para>Line object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>&lt; Stream out operator for line object </para>
        </briefdescription>
        <detaileddescription>
<para>Stream out operator for ray object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" line="42" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" bodystart="43" bodyend="59" declfile="/Users/davide/Documents/Git/acme/include/acme_utilities.hh" declline="52" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a98088cafcb6f5a89d6ae3ba9ce899578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
        <definition>ostream_type &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream_type &amp;os, ray const &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
          <declname>os</declname>
          <briefdescription><para>Output stream </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1ray" kindref="compound">ray</ref> const &amp;</type>
          <declname>obj</declname>
          <briefdescription><para>Ray object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Stream out operator for plane object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" line="63" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" bodystart="64" bodyend="80" declfile="/Users/davide/Documents/Git/acme/include/acme_utilities.hh" declline="59" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a1a24d4246b0c81542da1c4ac1f065bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
        <definition>ostream_type &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream_type &amp;os, plane const &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
          <declname>os</declname>
          <briefdescription><para>Output stream </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1plane" kindref="compound">plane</ref> const &amp;</type>
          <declname>obj</declname>
          <briefdescription><para>Plane object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Stream out operator for segment object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" line="84" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" bodystart="85" bodyend="101" declfile="/Users/davide/Documents/Git/acme/include/acme_utilities.hh" declline="66" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1aff0f64c913fb909da9657b9cc8859954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
        <definition>ostream_type &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream_type &amp;os, segment const &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
          <declname>os</declname>
          <briefdescription><para>Output stream </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1segment" kindref="compound">segment</ref> const &amp;</type>
          <declname>obj</declname>
          <briefdescription><para>Segment object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Stream out operator for box object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" line="105" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" bodystart="106" bodyend="122" declfile="/Users/davide/Documents/Git/acme/include/acme_utilities.hh" declline="73" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a5f66ddfc2210a61de93d19113839e72d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
        <definition>ostream_type &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream_type &amp;os, box const &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
          <declname>os</declname>
          <briefdescription><para>Output stream </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1box" kindref="compound">box</ref> const &amp;</type>
          <declname>obj</declname>
          <briefdescription><para>Box object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Stream out operator for triangle object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" line="126" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" bodystart="127" bodyend="143" declfile="/Users/davide/Documents/Git/acme/include/acme_utilities.hh" declline="80" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1a5e4a69a9e1251691fe5a5d438554205e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
        <definition>ostream_type &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream_type &amp;os, triangle const &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
          <declname>os</declname>
          <briefdescription><para>Output stream </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1triangle" kindref="compound">triangle</ref> const &amp;</type>
          <declname>obj</declname>
          <briefdescription><para>Triangle object </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Stream out operator for circle object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" line="147" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" bodystart="148" bodyend="166" declfile="/Users/davide/Documents/Git/acme/include/acme_utilities.hh" declline="87" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1afda8ecc83eadfa61da669e6557c73247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
        <definition>ostream_type &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream_type &amp;os, circle const &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
          <declname>os</declname>
          <briefdescription><para>Output stream </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classacme_1_1circle" kindref="compound">circle</ref> const &amp;</type>
          <declname>obj</declname>
          <briefdescription><para>Circle object </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" line="170" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" bodystart="171" bodyend="189" declfile="/Users/davide/Documents/Git/acme/include/acme_utilities.hh" declline="94" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="namespaceacme_1aad675a9ff31d76d10cea21801f8374a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
        <definition>ostream_type&amp; acme::operator&lt;&lt;</definition>
        <argsstring>(ostream_type &amp;os, affine const &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespaceacme_1af9a793b801973447e8834bdca49350e9" kindref="member">ostream_type</ref> &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" kindref="member">affine</ref> const &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" line="193" column="3" bodyfile="/Users/davide/Documents/Git/acme/src/acme_utilities.cc" bodystart="194" bodyend="208"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Namespace containing all acme typedefs, classes and routines. </para>
    </briefdescription>
    <detaileddescription>
<para>file: <ref refid="acme_8cc" kindref="compound">acme.cc</ref></para>
<para>file: <ref refid="acme___a_a_b_btree_8cc" kindref="compound">acme_AABBtree.cc</ref></para>
<para>file: <ref refid="acme__box_8cc" kindref="compound">acme_box.cc</ref></para>
<para>file: <ref refid="acme__circle_8cc" kindref="compound">acme_circle.cc</ref></para>
<para>file: <ref refid="acme__intersection_8cc" kindref="compound">acme_intersection.cc</ref></para>
<para>file: <ref refid="acme__line_8cc" kindref="compound">acme_line.cc</ref></para>
<para>file: <ref refid="acme__math_8cc" kindref="compound">acme_math.cc</ref></para>
<para>file: <ref refid="acme__plane_8cc" kindref="compound">acme_plane.cc</ref></para>
<para>file: acme_ray.ccc</para>
<para>file: <ref refid="acme__segment_8cc" kindref="compound">acme_segment.cc</ref></para>
<para>file: <ref refid="acme__triangle_8cc" kindref="compound">acme_triangle.cc</ref></para>
<para>file: <ref refid="acme__utilities_8cc" kindref="compound">acme_utilities.cc</ref></para>
<para>file: <ref refid="acme___a_a_b_btree_8hh" kindref="compound">acme_AABBtree.hh</ref></para>
<para>file: <ref refid="acme__box_8hh" kindref="compound">acme_box.hh</ref></para>
<para>file: <ref refid="acme__circle_8hh" kindref="compound">acme_circle.hh</ref></para>
<para>file: <ref refid="acme__intersection_8hh" kindref="compound">acme_intersection.hh</ref></para>
<para>file: <ref refid="acme__line_8hh" kindref="compound">acme_line.hh</ref></para>
<para>file: <ref refid="acme__math_8hh" kindref="compound">acme_math.hh</ref></para>
<para>file: <ref refid="acme__plane_8hh" kindref="compound">acme_plane.hh</ref></para>
<para>file: <ref refid="acme__ray_8hh" kindref="compound">acme_ray.hh</ref></para>
<para>file: <ref refid="acme__segment_8hh" kindref="compound">acme_segment.hh</ref></para>
<para>file: <ref refid="acme__triangle_8hh" kindref="compound">acme_triangle.hh</ref></para>
<para>file: <ref refid="acme__utilities_8hh" kindref="compound">acme_utilities.hh</ref> </para>
    </detaileddescription>
    <location file="/Users/davide/Documents/Git/acme/src/acme.cc" line="29" column="1"/>
  </compounddef>
</doxygen>
