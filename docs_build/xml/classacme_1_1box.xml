<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classacme_1_1box" kind="class" language="C++" prot="public">
    <compoundname>acme::box</compoundname>
    <includes refid="acme__box_8hh" local="no">acme_box.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classacme_1_1box_1a34e70512478406509c9847ec50066252" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classacme_1_1box" kindref="compound">box</ref> const  &gt;</type>
        <definition>typedef std::shared_ptr&lt;box const&gt; ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
<para>Shared pointer to box object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="53" column="29" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1box_1afd291f997846b76a4a81969306c873de" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classacme_1_1box_1a34e70512478406509c9847ec50066252" kindref="member">ptr</ref>, <ref refid="classacme_1_1box_1a34e70512478406509c9847ec50066252" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::pair&lt;ptr, ptr&gt; pairptr</definition>
        <argsstring></argsstring>
        <name>pairptr</name>
        <briefdescription>
<para>Pair of pointers to box objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="58" column="23" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1box_1a02f887d7463962af80aaef2eb362fab7" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1box_1a34e70512478406509c9847ec50066252" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;ptr&gt; vecptr</definition>
        <argsstring></argsstring>
        <name>vecptr</name>
        <briefdescription>
<para>Vector of pointers to box objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="59" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classacme_1_1box_1a27ff81c8e484849677def987e6c8d6ed" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classacme_1_1box_1afd291f997846b76a4a81969306c873de" kindref="member">pairptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;pairptr&gt; vecpairptr</definition>
        <argsstring></argsstring>
        <name>vecpairptr</name>
        <briefdescription>
<para>Vector of pairs of pointers to box objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="60" column="25" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classacme_1_1box_1a06c718d896d68afd01696f3b5cbd7501" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 _min</definition>
        <argsstring></argsstring>
        <name>_min</name>
        <briefdescription>
<para>Box maximum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="63" column="10" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classacme_1_1box_1a18cfb6aa71f4452001cbf836f519e402" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref></type>
        <definition>vec3 _max</definition>
        <argsstring></argsstring>
        <name>_max</name>
        <briefdescription>
<para>Box minimum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="64" column="10" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classacme_1_1box_1aea911f46d7e9d604e52b6ec89e2da21a" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref></type>
        <definition>int_type _id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
<para>Box id (may be used in external algorithms) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="65" column="14" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classacme_1_1box_1aca052d40ce25eebbaaa0eb4a39f965ae" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref></type>
        <definition>int_type _ipos</definition>
        <argsstring></argsstring>
        <name>_ipos</name>
        <briefdescription>
<para>Box rank (may be used in external algorithms) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="66" column="14" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classacme_1_1box_1a321afae26af79d8907055e61a7523ece" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~box</definition>
        <argsstring>()</argsstring>
        <name>~box</name>
        <briefdescription>
<para>Box class destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="70" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1ad6da20a8ad81878a00556d3b7ad92690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>box</definition>
        <argsstring>(const box &amp;)=default</argsstring>
        <name>box</name>
        <param>
          <type>const <ref refid="classacme_1_1box" kindref="compound">box</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Box copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="73" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1aa4b5aceb8fa96bcafa0ab2036c2ce26e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>box</definition>
        <argsstring>()</argsstring>
        <name>box</name>
        <briefdescription>
<para>Box class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="76" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a4a5f32d72b751a349a30474f658a1acc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>box</definition>
        <argsstring>(real_type minX, real_type minY, real_type minZ, real_type maxX, real_type maxY, real_type maxZ, int_type id, int_type ipos)</argsstring>
        <name>box</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>minX</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>minY</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>minZ</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>maxX</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>maxY</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>maxZ</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref></type>
          <declname>ipos</declname>
        </param>
        <briefdescription>
<para>Box class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="79" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="79" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a4e04a3975c84d85dbb77bdf2930e33bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>box</definition>
        <argsstring>(vec3 const &amp;min, vec3 const &amp;max, int_type id, int_type ipos)</argsstring>
        <name>box</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>min</declname>
          <briefdescription><para>Input box minimum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>max</declname>
          <briefdescription><para>Input box maximum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref></type>
          <declname>ipos</declname>
        </param>
        <briefdescription>
<para>Box class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="97" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="97" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1ab43218621ab463568d3542136a7f88d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>box</definition>
        <argsstring>(std::vector&lt; box::ptr &gt; const &amp;boxes, int_type id, int_type ipos)</argsstring>
        <name>box</name>
        <param>
          <type>std::vector&lt; <ref refid="classacme_1_1box_1a34e70512478406509c9847ec50066252" kindref="member">box::ptr</ref> &gt; const &amp;</type>
          <declname>boxes</declname>
          <briefdescription><para>Input pointer to vector of boxes </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref></type>
          <declname>ipos</declname>
        </param>
        <briefdescription>
<para>Box class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="111" column="5" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="111" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a4b5c669519b7f85c93d3b3feee9bcc56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classacme_1_1box" kindref="compound">box</ref> &amp;</type>
        <definition>box &amp; operator=</definition>
        <argsstring>(box const &amp;input)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classacme_1_1box" kindref="compound">box</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="123" column="9" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="44" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1ae683fe63c33c388e9ba1c6392dd477eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clear</definition>
        <argsstring>(void)</argsstring>
        <name>clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clear the box domain (set to Not-a-Number) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="129" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a5301eabb6a4be517a251991522c4993f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isApprox</definition>
        <argsstring>(box const &amp;input) const</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="classacme_1_1box" kindref="compound">box</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if box objects are (almost) equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="133" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isDegenerated</definition>
        <argsstring>(void) const</argsstring>
        <name>isDegenerated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if box is degenerated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="139" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="85" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a707a113b30b00c36efc291e99d420fe6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkMaxMin</definition>
        <argsstring>(void) const</argsstring>
        <name>checkMaxMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check box max and min points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="143" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a2c4d83493bbf915cd7cbe21f2205e0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool updateMaxMin</definition>
        <argsstring>(void)</argsstring>
        <name>updateMaxMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update and check box max and min points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="147" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="106" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a4736ee61d794080734c34707f73a1b9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const  &amp;</type>
        <definition>vec3 const  &amp; min</definition>
        <argsstring>(void) const</argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get min point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="151" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a374923cc349a462a3b79aec81c70ed0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type minX</definition>
        <argsstring>(void) const</argsstring>
        <name>minX</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get box minimum point x value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="155" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1afc4df7f1ed70163c9eb602c832742e8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type minY</definition>
        <argsstring>(void) const</argsstring>
        <name>minY</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get box minimum point y value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="159" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a327e696d1ce703dd9263112d509a3ea7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type minZ</definition>
        <argsstring>(void) const</argsstring>
        <name>minZ</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get box minimum point z value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="163" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a640826010588599fcab80ae0780ec816" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type min</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>min</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Input i-th value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get box minimum i-th point axis value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="167" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="163" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a9aa312d3418efaab57c392afd4df7857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void min</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>min</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>New box minimum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box minimum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="173" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a3aff6f64fc53128551c8a1ef0c38f31b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void min</definition>
        <argsstring>(real_type x, real_type y, real_type z)</argsstring>
        <name>min</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>x</declname>
          <briefdescription><para>Input x value of box minimum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>y</declname>
          <briefdescription><para>Input y value of box minimum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>z</declname>
          <briefdescription><para>Input z value of box minimum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box minimum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="179" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="182" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a484ca5ed2353aecf292629bf0166dbe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void minX</definition>
        <argsstring>(real_type input)</argsstring>
        <name>minX</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input x value of box minimum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box minimum point x value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="187" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1abe56696eaa79fb317a95acbb41b7825f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void minY</definition>
        <argsstring>(real_type input)</argsstring>
        <name>minY</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input y value of box minimum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box minimum point y value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="193" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1abb5482013625fd35b4ea140b84752573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void minZ</definition>
        <argsstring>(real_type input)</argsstring>
        <name>minZ</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input z value of box minimum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box minimum point z value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="199" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a1d7a60d04139ba5b4b42b32db387bdd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void min</definition>
        <argsstring>(size_t i, real_type input)</argsstring>
        <name>min</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Input i-th value </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value of box minimum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box minimum i-th point axis value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="205" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="222" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a6715c536154930b16f1b130d073bf4cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const  &amp;</type>
        <definition>vec3 const  &amp; max</definition>
        <argsstring>(void) const</argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get box maximum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="212" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a377aac6f6d5dbf6d8a90e590a8b8d631" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type maxX</definition>
        <argsstring>(void) const</argsstring>
        <name>maxX</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get box maximum point x value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="216" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="241" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a294f3f396da28bc8b81b2d26e115ca07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type maxY</definition>
        <argsstring>(void) const</argsstring>
        <name>maxY</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get box maximum point y value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="220" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="250" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a042aab5df94e58d08b55984a2252abe1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type maxZ</definition>
        <argsstring>(void) const</argsstring>
        <name>maxZ</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get box maximum point z value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="224" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="259" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1aeb3b95219c67a09c5fec941cd61bd564" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type max</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>max</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Input i-th value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get box maximum i-th point axis value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="228" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="268" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a44b689efe895c02674fc354cfda9e46c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void max</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>max</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input box maximum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box maximum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="234" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="278" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a58d543fc492c00e6a62760c3899653d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void max</definition>
        <argsstring>(real_type x, real_type y, real_type z)</argsstring>
        <name>max</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>x</declname>
          <briefdescription><para>Input x value of box maximum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>y</declname>
          <briefdescription><para>Input y value of box maximum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>z</declname>
          <briefdescription><para>Input z value of box maximum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box maximum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="240" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="287" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a79042e14bcb1a14f79417b077a69c38a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void maxX</definition>
        <argsstring>(real_type input)</argsstring>
        <name>maxX</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input x value of box maximum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box maximum point x value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="248" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="300" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a1752afee9042a7653536f8e8d7a959b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void maxY</definition>
        <argsstring>(real_type input)</argsstring>
        <name>maxY</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input y value of box maximum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box maximum point y value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="254" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="309" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1af29af40112457408e1a3277fcbc09c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void maxZ</definition>
        <argsstring>(real_type input)</argsstring>
        <name>maxZ</name>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input z value of box maximum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box maximum point z value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="260" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="318" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1ace24ddb9d51798ea21ea17077fa23a42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void max</definition>
        <argsstring>(size_t i, real_type input)</argsstring>
        <name>max</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Input i-th value </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
          <declname>input</declname>
          <briefdescription><para>Input value of box maximum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set box maximum i-th point axis value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="266" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="327" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void translate</definition>
        <argsstring>(vec3 const &amp;input)</argsstring>
        <name>translate</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input translation vector </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Translate box by vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="273" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="337" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform</definition>
        <argsstring>(affine const &amp;matrix)</argsstring>
        <name>transform</name>
        <param>
          <type><ref refid="namespaceacme_1af09177c36f0e535fb9684dfae20630b5" kindref="member">affine</ref> const &amp;</type>
          <declname>matrix</declname>
          <briefdescription><para>4x4 affine transformation matrix </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Transform box with affine transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="279" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="347" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a7cf6be14967ccff95f9b36383b77a6d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intersects</definition>
        <argsstring>(box const &amp;input) const</argsstring>
        <name>intersects</name>
        <param>
          <type><ref refid="classacme_1_1box" kindref="compound">box</ref> const &amp;</type>
          <declname>input</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Detect if boxes collide. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="285" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="357" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a3fa8dca9a9ad85423a2e5ccbd1a3926d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void merged</definition>
        <argsstring>(box::vecptr const &amp;boxes)</argsstring>
        <name>merged</name>
        <param>
          <type><ref refid="classacme_1_1box_1a02f887d7463962af80aaef2eb362fab7" kindref="member">box::vecptr</ref> const &amp;</type>
          <declname>boxes</declname>
          <briefdescription><para>Input poiter to vector of boxes </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Build box with a vector of pointers to boxes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="291" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="369" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a626e36f5af1486c84d10e72db32ed6fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type centerDistance</definition>
        <argsstring>(vec3 const &amp;point) const</argsstring>
        <name>centerDistance</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Query point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Distance of a point to the box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="297" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="406" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1addff5ff81844ef9b9cff77dae0ed6323" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac0b09ba58a37f5f3ca415be4a02ec7aa" kindref="member">real_type</ref></type>
        <definition>real_type exteriorDistance</definition>
        <argsstring>(vec3 const &amp;point) const</argsstring>
        <name>exteriorDistance</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point</declname>
          <briefdescription><para>Query point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Maximum distance of a point to the box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="303" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="425" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a57d41df0c05eb76e014a91ffac54f064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clamp</definition>
        <argsstring>(vec3 const &amp;point0, vec3 const &amp;point1, vec3 const &amp;point2)</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point0</declname>
          <briefdescription><para>Input point 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point1</declname>
          <briefdescription><para>Input point 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const &amp;</type>
          <declname>point2</declname>
          <briefdescription><para>Input point 2 </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Resize the box as the minimum bounding box containing three input points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="309" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="438" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a583ca7cbd6e5f8470c31892c0b3ddb5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clamp</definition>
        <argsstring>(vec3 const points[3])</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="namespaceacme_1a0587d7b89f96b43f1654230eabe43ef9" kindref="member">vec3</ref> const</type>
          <declname>points</declname>
          <array>[3]</array>
          <briefdescription><para>Input points </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Resize the box as the minimum bounding box containing three input points. </para>
        </briefdescription>
        <detaileddescription>
<para>Return box id </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="317" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="454" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1ac6bbc2fcae7c8ee7b581869cbe499cd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref> const  &amp;</type>
        <definition>int_type const  &amp; id</definition>
        <argsstring>(void) const</argsstring>
        <name>id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return box position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="323" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="468" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classacme_1_1box_1a49451fed525b62d26d1402bec4cb3502" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceacme_1ac4de9d9335536ac22821171deec8d39e" kindref="member">int_type</ref> const  &amp;</type>
        <definition>int_type const  &amp; pos</definition>
        <argsstring>(void) const</argsstring>
        <name>pos</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="327" column="5" bodyfile="/Users/davide/Documents/Git/acme/src/acme_box.cc" bodystart="477" bodyend="481"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Box class container. </para>
    </briefdescription>
    <detaileddescription>
<para>Box in 3D space and defined by a &quot;maximum&quot; and a &quot;minimum&quot; point. </para>
    </detaileddescription>
    <location file="/Users/davide/Documents/Git/acme/include/acme_box.hh" line="49" column="3" bodyfile="/Users/davide/Documents/Git/acme/include/acme_box.hh" bodystart="50" bodyend="329"/>
    <listofallmembers>
      <member refid="classacme_1_1box_1aea911f46d7e9d604e52b6ec89e2da21a" prot="private" virt="non-virtual"><scope>acme::box</scope><name>_id</name></member>
      <member refid="classacme_1_1box_1aca052d40ce25eebbaaa0eb4a39f965ae" prot="private" virt="non-virtual"><scope>acme::box</scope><name>_ipos</name></member>
      <member refid="classacme_1_1box_1a18cfb6aa71f4452001cbf836f519e402" prot="private" virt="non-virtual"><scope>acme::box</scope><name>_max</name></member>
      <member refid="classacme_1_1box_1a06c718d896d68afd01696f3b5cbd7501" prot="private" virt="non-virtual"><scope>acme::box</scope><name>_min</name></member>
      <member refid="classacme_1_1box_1ad6da20a8ad81878a00556d3b7ad92690" prot="public" virt="non-virtual"><scope>acme::box</scope><name>box</name></member>
      <member refid="classacme_1_1box_1aa4b5aceb8fa96bcafa0ab2036c2ce26e" prot="public" virt="non-virtual"><scope>acme::box</scope><name>box</name></member>
      <member refid="classacme_1_1box_1a4a5f32d72b751a349a30474f658a1acc" prot="public" virt="non-virtual"><scope>acme::box</scope><name>box</name></member>
      <member refid="classacme_1_1box_1a4e04a3975c84d85dbb77bdf2930e33bd" prot="public" virt="non-virtual"><scope>acme::box</scope><name>box</name></member>
      <member refid="classacme_1_1box_1ab43218621ab463568d3542136a7f88d2" prot="public" virt="non-virtual"><scope>acme::box</scope><name>box</name></member>
      <member refid="classacme_1_1box_1a626e36f5af1486c84d10e72db32ed6fb" prot="public" virt="non-virtual"><scope>acme::box</scope><name>centerDistance</name></member>
      <member refid="classacme_1_1box_1a707a113b30b00c36efc291e99d420fe6" prot="public" virt="non-virtual"><scope>acme::box</scope><name>checkMaxMin</name></member>
      <member refid="classacme_1_1box_1a57d41df0c05eb76e014a91ffac54f064" prot="public" virt="non-virtual"><scope>acme::box</scope><name>clamp</name></member>
      <member refid="classacme_1_1box_1a583ca7cbd6e5f8470c31892c0b3ddb5d" prot="public" virt="non-virtual"><scope>acme::box</scope><name>clamp</name></member>
      <member refid="classacme_1_1box_1ae683fe63c33c388e9ba1c6392dd477eb" prot="public" virt="non-virtual"><scope>acme::box</scope><name>clear</name></member>
      <member refid="classacme_1_1box_1addff5ff81844ef9b9cff77dae0ed6323" prot="public" virt="non-virtual"><scope>acme::box</scope><name>exteriorDistance</name></member>
      <member refid="classacme_1_1box_1ac6bbc2fcae7c8ee7b581869cbe499cd2" prot="public" virt="non-virtual"><scope>acme::box</scope><name>id</name></member>
      <member refid="classacme_1_1box_1a7cf6be14967ccff95f9b36383b77a6d1" prot="public" virt="non-virtual"><scope>acme::box</scope><name>intersects</name></member>
      <member refid="classacme_1_1box_1a5301eabb6a4be517a251991522c4993f" prot="public" virt="non-virtual"><scope>acme::box</scope><name>isApprox</name></member>
      <member refid="classacme_1_1box_1a355643d37f8a75f23270e0fe8bea6f39" prot="public" virt="non-virtual"><scope>acme::box</scope><name>isDegenerated</name></member>
      <member refid="classacme_1_1box_1a6715c536154930b16f1b130d073bf4cb" prot="public" virt="non-virtual"><scope>acme::box</scope><name>max</name></member>
      <member refid="classacme_1_1box_1aeb3b95219c67a09c5fec941cd61bd564" prot="public" virt="non-virtual"><scope>acme::box</scope><name>max</name></member>
      <member refid="classacme_1_1box_1a44b689efe895c02674fc354cfda9e46c" prot="public" virt="non-virtual"><scope>acme::box</scope><name>max</name></member>
      <member refid="classacme_1_1box_1a58d543fc492c00e6a62760c3899653d8" prot="public" virt="non-virtual"><scope>acme::box</scope><name>max</name></member>
      <member refid="classacme_1_1box_1ace24ddb9d51798ea21ea17077fa23a42" prot="public" virt="non-virtual"><scope>acme::box</scope><name>max</name></member>
      <member refid="classacme_1_1box_1a377aac6f6d5dbf6d8a90e590a8b8d631" prot="public" virt="non-virtual"><scope>acme::box</scope><name>maxX</name></member>
      <member refid="classacme_1_1box_1a79042e14bcb1a14f79417b077a69c38a" prot="public" virt="non-virtual"><scope>acme::box</scope><name>maxX</name></member>
      <member refid="classacme_1_1box_1a294f3f396da28bc8b81b2d26e115ca07" prot="public" virt="non-virtual"><scope>acme::box</scope><name>maxY</name></member>
      <member refid="classacme_1_1box_1a1752afee9042a7653536f8e8d7a959b8" prot="public" virt="non-virtual"><scope>acme::box</scope><name>maxY</name></member>
      <member refid="classacme_1_1box_1a042aab5df94e58d08b55984a2252abe1" prot="public" virt="non-virtual"><scope>acme::box</scope><name>maxZ</name></member>
      <member refid="classacme_1_1box_1af29af40112457408e1a3277fcbc09c8a" prot="public" virt="non-virtual"><scope>acme::box</scope><name>maxZ</name></member>
      <member refid="classacme_1_1box_1a3fa8dca9a9ad85423a2e5ccbd1a3926d" prot="public" virt="non-virtual"><scope>acme::box</scope><name>merged</name></member>
      <member refid="classacme_1_1box_1a4736ee61d794080734c34707f73a1b9f" prot="public" virt="non-virtual"><scope>acme::box</scope><name>min</name></member>
      <member refid="classacme_1_1box_1a640826010588599fcab80ae0780ec816" prot="public" virt="non-virtual"><scope>acme::box</scope><name>min</name></member>
      <member refid="classacme_1_1box_1a9aa312d3418efaab57c392afd4df7857" prot="public" virt="non-virtual"><scope>acme::box</scope><name>min</name></member>
      <member refid="classacme_1_1box_1a3aff6f64fc53128551c8a1ef0c38f31b" prot="public" virt="non-virtual"><scope>acme::box</scope><name>min</name></member>
      <member refid="classacme_1_1box_1a1d7a60d04139ba5b4b42b32db387bdd2" prot="public" virt="non-virtual"><scope>acme::box</scope><name>min</name></member>
      <member refid="classacme_1_1box_1a374923cc349a462a3b79aec81c70ed0c" prot="public" virt="non-virtual"><scope>acme::box</scope><name>minX</name></member>
      <member refid="classacme_1_1box_1a484ca5ed2353aecf292629bf0166dbe0" prot="public" virt="non-virtual"><scope>acme::box</scope><name>minX</name></member>
      <member refid="classacme_1_1box_1afc4df7f1ed70163c9eb602c832742e8c" prot="public" virt="non-virtual"><scope>acme::box</scope><name>minY</name></member>
      <member refid="classacme_1_1box_1abe56696eaa79fb317a95acbb41b7825f" prot="public" virt="non-virtual"><scope>acme::box</scope><name>minY</name></member>
      <member refid="classacme_1_1box_1a327e696d1ce703dd9263112d509a3ea7" prot="public" virt="non-virtual"><scope>acme::box</scope><name>minZ</name></member>
      <member refid="classacme_1_1box_1abb5482013625fd35b4ea140b84752573" prot="public" virt="non-virtual"><scope>acme::box</scope><name>minZ</name></member>
      <member refid="classacme_1_1box_1a4b5c669519b7f85c93d3b3feee9bcc56" prot="public" virt="non-virtual"><scope>acme::box</scope><name>operator=</name></member>
      <member refid="classacme_1_1box_1afd291f997846b76a4a81969306c873de" prot="public" virt="non-virtual"><scope>acme::box</scope><name>pairptr</name></member>
      <member refid="classacme_1_1box_1a49451fed525b62d26d1402bec4cb3502" prot="public" virt="non-virtual"><scope>acme::box</scope><name>pos</name></member>
      <member refid="classacme_1_1box_1a34e70512478406509c9847ec50066252" prot="public" virt="non-virtual"><scope>acme::box</scope><name>ptr</name></member>
      <member refid="classacme_1_1box_1a39557f09c28bc8dd1df4164b6ac97d4b" prot="public" virt="non-virtual"><scope>acme::box</scope><name>transform</name></member>
      <member refid="classacme_1_1box_1a145b38d9af4c52f0b0c19523b3f3d6ee" prot="public" virt="non-virtual"><scope>acme::box</scope><name>translate</name></member>
      <member refid="classacme_1_1box_1a2c4d83493bbf915cd7cbe21f2205e0c6" prot="public" virt="non-virtual"><scope>acme::box</scope><name>updateMaxMin</name></member>
      <member refid="classacme_1_1box_1a27ff81c8e484849677def987e6c8d6ed" prot="public" virt="non-virtual"><scope>acme::box</scope><name>vecpairptr</name></member>
      <member refid="classacme_1_1box_1a02f887d7463962af80aaef2eb362fab7" prot="public" virt="non-virtual"><scope>acme::box</scope><name>vecptr</name></member>
      <member refid="classacme_1_1box_1a321afae26af79d8907055e61a7523ece" prot="public" virt="non-virtual"><scope>acme::box</scope><name>~box</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
